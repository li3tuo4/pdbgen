----------------------------------------------------------------------
-- Copyright (C) 2008 ASIP Solutions, Inc. All rights reserved. 
-- Generated by ASIP Meister 2.3 on 2014/09/17 13:51:54 
----------------------------------------------------------------------

-----------------------------------------------------------
-- Entity Name: ssCPU_2_3_0
-----------------------------------------------------------

library IEEE;
use IEEE.std_logic_1164.all;

entity ssCPU_2_3_0 is
  port (
    CLK : in std_logic;
    Reset : in std_logic;
    imaddr : out std_logic_vector(31 downto 0);
    imdat_in : in std_logic_vector(63 downto 0);
    imdat_out : out std_logic_vector(63 downto 0);
    imrw : out std_logic;
    imaddr_err : in std_logic;
    DataAB : out std_logic_vector(31 downto 0);
    DataDIB : in std_logic_vector(31 downto 0);
    DataDOB : out std_logic_vector(31 downto 0);
    DataReq : out std_logic;
    DataAck : in std_logic;
    DataRW : out std_logic;
    DataMode : out std_logic_vector(1 downto 0);
    DataExt : out std_logic;
    DataAdrerr : in std_logic;
    DataCancel : out std_logic
  );
end entity ssCPU_2_3_0;

architecture RTL of ssCPU_2_3_0 is
  component fhm_alu_w32
  port (
    a : in std_logic_vector(31 downto 0);
    b : in std_logic_vector(31 downto 0);
    cin : in std_logic;
    mode : in std_logic_vector(4 downto 0);
    result : out std_logic_vector(31 downto 0);
    flag : out std_logic_vector(3 downto 0)
  );
  end component fhm_alu_w32;

  component fhm_adder_w32
  port (
    a : in std_logic_vector(31 downto 0);
    b : in std_logic_vector(31 downto 0);
    cin : in std_logic;
    result : out std_logic_vector(31 downto 0);
    cout : out std_logic
  );
  end component fhm_adder_w32;

  component fhm_divider_w32
  port (
    clock : in std_logic;
    async_reset : in std_logic;
    reset : in std_logic;
    clear : in std_logic;
    a : in std_logic_vector(31 downto 0);
    b : in std_logic_vector(31 downto 0);
    start : in std_logic;
    mode : in std_logic;
    q : out std_logic_vector(31 downto 0);
    r : out std_logic_vector(31 downto 0);
    flag : out std_logic;
    fin : out std_logic
  );
  end component fhm_divider_w32;

  component fhm_extender_w16
  port (
    data_in : in std_logic_vector(15 downto 0);
    mode : in std_logic;
    data_out : out std_logic_vector(31 downto 0)
  );
  end component fhm_extender_w16;

  component fhm_multiplier_w32
  port (
    clock : in std_logic;
    async_reset : in std_logic;
    reset : in std_logic;
    a : in std_logic_vector(31 downto 0);
    b : in std_logic_vector(31 downto 0);
    mode : in std_logic;
    start : in std_logic;
    clear : in std_logic;
    result : out std_logic_vector(63 downto 0);
    fin : out std_logic
  );
  end component fhm_multiplier_w32;

  component fhm_register_w32
  port (
    clock : in std_logic;
    async_reset : in std_logic;
    reset : in std_logic;
    enb : in std_logic;
    data_in : in std_logic_vector(31 downto 0);
    data_out : out std_logic_vector(31 downto 0)
  );
  end component fhm_register_w32;

  component fhm_registerfile_w32
  port (
    clock : in std_logic;
    async_reset : in std_logic;
    reset : in std_logic;
    w_enb0 : in std_logic;
    w_enb1 : in std_logic;
    w_sel0 : in std_logic_vector(4 downto 0);
    w_sel1 : in std_logic_vector(4 downto 0);
    data_in0 : in std_logic_vector(31 downto 0);
    data_in1 : in std_logic_vector(31 downto 0);
    r_sel0 : in std_logic_vector(4 downto 0);
    r_sel1 : in std_logic_vector(4 downto 0);
    r_sel2 : in std_logic_vector(4 downto 0);
    r_sel3 : in std_logic_vector(4 downto 0);
    data_out0 : out std_logic_vector(31 downto 0);
    data_out1 : out std_logic_vector(31 downto 0);
    data_out2 : out std_logic_vector(31 downto 0);
    data_out3 : out std_logic_vector(31 downto 0)
  );
  end component fhm_registerfile_w32;

  component fhm_register_w64
  port (
    clock : in std_logic;
    async_reset : in std_logic;
    reset : in std_logic;
    enb : in std_logic;
    data_in : in std_logic_vector(63 downto 0);
    data_out : out std_logic_vector(63 downto 0)
  );
  end component fhm_register_w64;

  component fhm_mifu_w32
  port (
    req_out : in std_logic;
    ack_in : out std_logic;
    cancel_out : in std_logic;
    req2mem : out std_logic;
    ack2cpu : in std_logic;
    cancel2mem : out std_logic;
    addr_out : in std_logic_vector(31 downto 0);
    data_in : out std_logic_vector(31 downto 0);
    aderr_in : out std_logic;
    addr2mem : out std_logic_vector(31 downto 0);
    data2cpu : in std_logic_vector(31 downto 0);
    aderr2cpu : in std_logic;
    rw_out : in std_logic;
    data_out : in std_logic_vector(31 downto 0);
    rw2mem : out std_logic;
    data2mem : out std_logic_vector(31 downto 0);
    mode_out : in std_logic_vector(1 downto 0);
    ext_out : in std_logic;
    mode2mem : out std_logic_vector(1 downto 0);
    ext2mem : out std_logic
  );
  end component fhm_mifu_w32;

  component fhm_pcu_w32
  port (
    clock : in std_logic;
    async_reset : in std_logic;
    load : in std_logic;
    reset : in std_logic;
    hold : in std_logic;
    data_in : in std_logic_vector(31 downto 0);
    data_out : out std_logic_vector(31 downto 0)
  );
  end component fhm_pcu_w32;

  component fhm_shifter_w32
  port (
    data_in : in std_logic_vector(31 downto 0);
    mode : in std_logic_vector(1 downto 0);
    ctrl : in std_logic_vector(4 downto 0);
    data_out : out std_logic_vector(31 downto 0)
  );
  end component fhm_shifter_w32;

  component fhm_fwu_w32
  port (
    data0 : in std_logic_vector(31 downto 0);
    data1 : in std_logic_vector(31 downto 0);
    data2 : in std_logic_vector(31 downto 0);
    data3 : in std_logic_vector(31 downto 0);
    data4 : in std_logic_vector(31 downto 0);
    data5 : in std_logic_vector(31 downto 0);
    data6 : in std_logic_vector(31 downto 0);
    data7 : in std_logic_vector(31 downto 0);
    data8 : in std_logic_vector(31 downto 0);
    num0 : in std_logic_vector(4 downto 0);
    num1 : in std_logic_vector(4 downto 0);
    num2 : in std_logic_vector(4 downto 0);
    num3 : in std_logic_vector(4 downto 0);
    num4 : in std_logic_vector(4 downto 0);
    num5 : in std_logic_vector(4 downto 0);
    num6 : in std_logic_vector(4 downto 0);
    num7 : in std_logic_vector(4 downto 0);
    num8 : in std_logic_vector(4 downto 0);
    fw1 : in std_logic;
    fw2 : in std_logic;
    fw3 : in std_logic;
    fw4 : in std_logic;
    fw5 : in std_logic;
    fw6 : in std_logic;
    fw7 : in std_logic;
    fw8 : in std_logic;
    data_out : out std_logic_vector(31 downto 0)
  );
  end component fhm_fwu_w32;

  component fhm_mifu_w64
  port (
    addr_out : in std_logic_vector(31 downto 0);
    data_in : out std_logic_vector(63 downto 0);
    aderr_in : out std_logic;
    addr2mem : out std_logic_vector(31 downto 0);
    data2cpu : in std_logic_vector(63 downto 0);
    aderr2cpu : in std_logic;
    rw_out : in std_logic;
    data_out : in std_logic_vector(63 downto 0);
    rw2mem : out std_logic;
    data2mem : out std_logic_vector(63 downto 0)
  );
  end component fhm_mifu_w64;

  component fhm_fwu_lock_w32
  port (
    data0 : in std_logic_vector(31 downto 0);
    data1 : in std_logic_vector(31 downto 0);
    data2 : in std_logic_vector(31 downto 0);
    data3 : in std_logic_vector(31 downto 0);
    data4 : in std_logic_vector(31 downto 0);
    data5 : in std_logic_vector(31 downto 0);
    data6 : in std_logic_vector(31 downto 0);
    data7 : in std_logic_vector(31 downto 0);
    data8 : in std_logic_vector(31 downto 0);
    num0 : in std_logic_vector(4 downto 0);
    num1 : in std_logic_vector(4 downto 0);
    num2 : in std_logic_vector(4 downto 0);
    num3 : in std_logic_vector(4 downto 0);
    num4 : in std_logic_vector(4 downto 0);
    num5 : in std_logic_vector(4 downto 0);
    num6 : in std_logic_vector(4 downto 0);
    num7 : in std_logic_vector(4 downto 0);
    num8 : in std_logic_vector(4 downto 0);
    locknum1 : in std_logic_vector(4 downto 0);
    locknum2 : in std_logic_vector(4 downto 0);
    locknum3 : in std_logic_vector(4 downto 0);
    locknum4 : in std_logic_vector(4 downto 0);
    locknum5 : in std_logic_vector(4 downto 0);
    locknum6 : in std_logic_vector(4 downto 0);
    fw1 : in std_logic;
    fw2 : in std_logic;
    fw3 : in std_logic;
    fw4 : in std_logic;
    fw5 : in std_logic;
    fw6 : in std_logic;
    fw7 : in std_logic;
    fw8 : in std_logic;
    lock1 : in std_logic;
    lock2 : in std_logic;
    lock3 : in std_logic;
    lock4 : in std_logic;
    lock5 : in std_logic;
    lock6 : in std_logic;
    data_out : out std_logic_vector(31 downto 0);
    lock : out std_logic;
    dummy_start : in std_logic;
    dummy_cancel : in std_logic
  );
  end component fhm_fwu_lock_w32;

  component fhm_multiplexor_w32
  port (
    data_in0 : in std_logic_vector(31 downto 0);
    data_in1 : in std_logic_vector(31 downto 0);
    data_in2 : in std_logic_vector(31 downto 0);
    data_in3 : in std_logic_vector(31 downto 0);
    sel : in std_logic_vector(1 downto 0);
    data_out : out std_logic_vector(31 downto 0)
  );
  end component fhm_multiplexor_w32;

  component rtg_controller
  port (
    CLK : in std_logic;
    RST : in std_logic;
    INTREQ_RESET : in std_logic;
    CTRLIN_CMPEQ_00_EX : in std_logic;
    CTRLIN_CMPNEQ_00_EX : in std_logic;
    CTRLIN_CMPEQ_01_EX : in std_logic;
    CTRLIN_CMPNEQ_01_EX : in std_logic;
    CTRLIN_CMPEQ_02_EX : in std_logic;
    CTRLIN_CMPNEQ_02_EX : in std_logic;
    CTRLIN_FWUL0_LOCK : in std_logic;
    CTRLOUT_FWUL0_DUMMY_CANCEL : out std_logic;
    CTRLIN_DMEM_ACK_IN : in std_logic;
    CTRLOUT_DMEM_CANCEL_OUT : out std_logic;
    CTRLIN_FWUL1_LOCK : in std_logic;
    CTRLOUT_FWUL1_DUMMY_CANCEL : out std_logic;
    CTRLIN_FWUL2_LOCK : in std_logic;
    CTRLOUT_FWUL2_DUMMY_CANCEL : out std_logic;
    CTRLIN_FWUL3_LOCK : in std_logic;
    CTRLOUT_FWUL3_DUMMY_CANCEL : out std_logic;
    DATAIN_CPC_DATA_OUT : in std_logic_vector(31 downto 0);
    DATAOUT_SAVED_PC : out std_logic_vector(31 downto 0);
    DATAOUT_DS_OFFSET : out std_logic;
    DATAIN_IREG_DATA_OUT : in std_logic_vector(63 downto 0);
    CTRLOUT_IMEM_RW_OUT : out std_logic;
    CTRLOUT_IREG_ENB : out std_logic;
    CTRLOUT_CPC_HOLD : out std_logic;
    CTRLOUT_EXT1_MODE : out std_logic;
    CTRLOUT_ALU1_MODE : out std_logic_vector(4 downto 0);
    CTRLOUT_ALU1_CIN : out std_logic;
    CTRLOUT_FWUL0_LOCK1 : out std_logic;
    CTRLOUT_FWUL1_LOCK1 : out std_logic;
    CTRLOUT_FWUL2_LOCK1 : out std_logic;
    CTRLOUT_FWUL3_LOCK1 : out std_logic;
    CTRLOUT_DMEM_RW_OUT : out std_logic;
    CTRLOUT_DMEM_MODE_OUT : out std_logic_vector(1 downto 0);
    CTRLOUT_DMEM_EXT_OUT : out std_logic;
    CTRLOUT_FWUL0_FW3 : out std_logic;
    CTRLOUT_FWUL1_FW3 : out std_logic;
    CTRLOUT_FWUL2_FW3 : out std_logic;
    CTRLOUT_FWUL3_FW3 : out std_logic;
    CTRLOUT_FWUL0_LOCK3 : out std_logic;
    CTRLOUT_FWUL1_LOCK3 : out std_logic;
    CTRLOUT_FWUL2_LOCK3 : out std_logic;
    CTRLOUT_FWUL3_LOCK3 : out std_logic;
    CTRLOUT_FWUL0_FW5 : out std_logic;
    CTRLOUT_FWUL1_FW5 : out std_logic;
    CTRLOUT_FWUL2_FW5 : out std_logic;
    CTRLOUT_FWUL3_FW5 : out std_logic;
    CTRLOUT_GPR_W_ENB0 : out std_logic;
    CTRLOUT_FWUL0_FW7 : out std_logic;
    CTRLOUT_FWUL1_FW7 : out std_logic;
    CTRLOUT_FWUL2_FW7 : out std_logic;
    CTRLOUT_FWUL3_FW7 : out std_logic;
    CTRLOUT_FWUL0_LOCK2 : out std_logic;
    CTRLOUT_FWUL1_LOCK2 : out std_logic;
    CTRLOUT_FWUL2_LOCK2 : out std_logic;
    CTRLOUT_FWUL3_LOCK2 : out std_logic;
    CTRLOUT_FWUL0_LOCK4 : out std_logic;
    CTRLOUT_FWUL1_LOCK4 : out std_logic;
    CTRLOUT_FWUL2_LOCK4 : out std_logic;
    CTRLOUT_FWUL3_LOCK4 : out std_logic;
    CTRLOUT_FWUL0_FW6 : out std_logic;
    CTRLOUT_FWUL1_FW6 : out std_logic;
    CTRLOUT_FWUL2_FW6 : out std_logic;
    CTRLOUT_FWUL3_FW6 : out std_logic;
    CTRLOUT_FWUL0_LOCK5 : out std_logic;
    CTRLOUT_FWUL1_LOCK5 : out std_logic;
    CTRLOUT_FWUL2_LOCK5 : out std_logic;
    CTRLOUT_FWUL3_LOCK5 : out std_logic;
    CTRLOUT_FWUL0_FW8 : out std_logic;
    CTRLOUT_FWUL1_FW8 : out std_logic;
    CTRLOUT_FWUL2_FW8 : out std_logic;
    CTRLOUT_FWUL3_FW8 : out std_logic;
    CTRLOUT_GPR_W_ENB1 : out std_logic;
    CTRLOUT_CPC_LOAD : out std_logic;
    CTRLOUT_FWUL0_FW1 : out std_logic;
    CTRLOUT_FWUL1_FW1 : out std_logic;
    CTRLOUT_FWUL2_FW1 : out std_logic;
    CTRLOUT_FWUL3_FW1 : out std_logic;
    CTRLOUT_MUL1_MODE : out std_logic;
    CTRLOUT_LO_ENB : out std_logic;
    CTRLOUT_HI_ENB : out std_logic;
    CTRLOUT_DIV1_MODE : out std_logic;
    CTRLOUT_SFT1_MODE : out std_logic_vector(1 downto 0);
    CTRLOUT_SYSREG_ENB : out std_logic;
    CTRLOUT_FWUL0_DUMMY_START : out std_logic;
    CTRLOUT_DMEM_REQ_OUT : out std_logic;
    CTRLOUT_FWUL1_DUMMY_START : out std_logic;
    CTRLOUT_FWUL2_DUMMY_START : out std_logic;
    CTRLOUT_FWUL3_DUMMY_START : out std_logic;
    CTRLOUT_IREG_RESET : out std_logic;
    CTRLOUT_CPC_RESET : out std_logic;
    CTRLOUT_GPR_RESET : out std_logic;
    CTRLOUT_UA_MUX00_SEL : out std_logic;
    CTRLOUT_UA_MUX01_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX02_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX03_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX04_SEL : out std_logic;
    CTRLOUT_UA_MUX05_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX06_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX07_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX08_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX09_SEL : out std_logic;
    CTRLOUT_UA_MUX10_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX11_SEL : out std_logic;
    CTRLOUT_UA_MUX12_SEL : out std_logic;
    CTRLOUT_UA_MUX13_SEL : out std_logic;
    CTRLOUT_UA_MUX14_SEL : out std_logic;
    CTRLOUT_UA_MUX15_SEL : out std_logic;
    CTRLOUT_UA_MUX16_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX17_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX18_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX19_SEL : out std_logic;
    CTRLOUT_UA_MUX20_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX21_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX22_SEL : out std_logic;
    CTRLOUT_UA_MUX23_SEL : out std_logic;
    CTRLOUT_UA_MUX24_SEL : out std_logic;
    CTRLOUT_UA_MUX25_SEL : out std_logic;
    CTRLOUT_UA_MUX26_SEL : out std_logic;
    CTRLOUT_UA_MUX27_SEL : out std_logic;
    CTRLOUT_UA_MUX28_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX29_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX30_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX31_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX32_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX33_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX34_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX35_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX36_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX37_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX38_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX39_SEL : out std_logic;
    CTRLOUT_UA_MUX40_SEL : out std_logic;
    CTRLOUT_UA_MUX41_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX42_SEL : out std_logic;
    CTRLOUT_UA_MUX43_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX44_SEL : out std_logic;
    CTRLOUT_UA_MUX45_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX46_SEL : out std_logic;
    CTRLOUT_UA_MUX47_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX48_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX49_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX50_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX51_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX52_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX53_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX54_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX55_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX56_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX57_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX58_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX59_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX60_SEL : out std_logic;
    CTRLOUT_UA_MUX61_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX62_SEL : out std_logic;
    CTRLOUT_UA_MUX63_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX64_SEL : out std_logic;
    CTRLOUT_UA_MUX65_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX66_SEL : out std_logic;
    CTRLOUT_UA_MUX67_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX68_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX69_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX70_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX71_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX72_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX73_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX74_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX75_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX76_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX77_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX78_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX79_SEL : out std_logic;
    CTRLOUT_UA_MUX80_SEL : out std_logic;
    CTRLOUT_UA_MUX81_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX82_SEL : out std_logic;
    CTRLOUT_UA_MUX83_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX84_SEL : out std_logic;
    CTRLOUT_UA_MUX85_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX86_SEL : out std_logic;
    CTRLOUT_UA_MUX87_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX88_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX89_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX90_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX91_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX92_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX93_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX94_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX95_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX96_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX97_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX98_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX99_SEL : out std_logic;
    CTRLOUT_UA_MUX100_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX101_SEL : out std_logic;
    CTRLOUT_UA_MUX102_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX103_SEL : out std_logic;
    CTRLOUT_UA_MUX104_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX105_SEL : out std_logic;
    CTRLOUT_UA_MUX106_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX107_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX108_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX109_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX110_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_PREG00_ENB : out std_logic;
    CTRLOUT_UA_PREG01_ENB : out std_logic;
    CTRLOUT_UA_PREG02_ENB : out std_logic;
    CTRLOUT_UA_PREG03_ENB : out std_logic;
    CTRLOUT_UA_PREG04_ENB : out std_logic;
    CTRLOUT_UA_PREG05_ENB : out std_logic;
    CTRLOUT_UA_PREG06_ENB : out std_logic;
    CTRLOUT_UA_PREG07_ENB : out std_logic;
    CTRLOUT_UA_PREG08_ENB : out std_logic;
    CTRLOUT_UA_PREG09_ENB : out std_logic;
    CTRLOUT_UA_PREG10_ENB : out std_logic;
    CTRLOUT_UA_PREG11_ENB : out std_logic;
    CTRLOUT_UA_PREG12_ENB : out std_logic;
    CTRLOUT_UA_PREG13_ENB : out std_logic;
    CTRLOUT_UA_PREG14_ENB : out std_logic;
    CTRLOUT_UA_PREG15_ENB : out std_logic;
    CTRLOUT_UA_PREG16_ENB : out std_logic;
    CTRLOUT_UA_PREG17_ENB : out std_logic;
    CTRLOUT_UA_PREG18_ENB : out std_logic;
    CTRLOUT_UA_PREG19_ENB : out std_logic;
    CTRLOUT_UA_PREG20_ENB : out std_logic;
    CTRLOUT_UA_PREG21_ENB : out std_logic;
    CTRLOUT_UA_PREG22_ENB : out std_logic;
    CTRLOUT_UA_PREG23_ENB : out std_logic;
    CTRLOUT_UA_PREG24_ENB : out std_logic;
    CTRLOUT_UA_PREG25_ENB : out std_logic;
    CTRLOUT_UA_PREG26_ENB : out std_logic;
    CTRLOUT_UA_PREG27_ENB : out std_logic;
    CTRLOUT_UA_PREG28_ENB : out std_logic;
    CTRLOUT_UA_PREG29_ENB : out std_logic;
    CTRLOUT_UA_PREG30_ENB : out std_logic;
    CTRLOUT_UA_PREG31_ENB : out std_logic;
    CTRLOUT_UA_PREG32_ENB : out std_logic;
    CTRLOUT_UA_PREG33_ENB : out std_logic;
    CTRLOUT_UA_PREG34_ENB : out std_logic;
    CTRLOUT_UA_PREG35_ENB : out std_logic;
    CTRLOUT_UA_PREG36_ENB : out std_logic;
    CTRLOUT_UA_PREG37_ENB : out std_logic;
    CTRLOUT_UA_PREG38_ENB : out std_logic;
    CTRLOUT_UA_PREG39_ENB : out std_logic;
    CTRLOUT_UA_PREG40_ENB : out std_logic;
    CTRLOUT_UA_PREG41_ENB : out std_logic;
    CTRLOUT_UA_PREG42_ENB : out std_logic;
    CTRLOUT_UA_PREG43_ENB : out std_logic;
    CTRLOUT_UA_PREG44_ENB : out std_logic;
    CTRLOUT_UA_PREG45_ENB : out std_logic;
    CTRLOUT_UA_PREG46_ENB : out std_logic;
    CTRLOUT_UA_PREG47_ENB : out std_logic;
    CTRLOUT_UA_PREG48_ENB : out std_logic;
    CTRLOUT_UA_PREG49_ENB : out std_logic;
    CTRLOUT_UA_PREG50_ENB : out std_logic;
    CTRLOUT_UA_PREG51_ENB : out std_logic;
    CTRLOUT_UA_PREG52_ENB : out std_logic;
    CTRLOUT_UA_PREG53_ENB : out std_logic;
    CTRLOUT_UA_PREG54_ENB : out std_logic;
    CTRLOUT_UA_PREG55_ENB : out std_logic;
    CTRLOUT_UA_PREG56_ENB : out std_logic;
    CTRLOUT_UA_PREG57_ENB : out std_logic;
    CTRLOUT_UA_PREG58_ENB : out std_logic;
    CTRLOUT_UA_PREG59_ENB : out std_logic;
    CTRLOUT_UA_PREG60_ENB : out std_logic;
    CTRLOUT_UA_PREG61_ENB : out std_logic;
    CTRLOUT_UA_PREG62_ENB : out std_logic;
    CTRLOUT_UA_PREG63_ENB : out std_logic;
    CTRLOUT_UA_PREG64_ENB : out std_logic;
    CTRLOUT_UA_PREG65_ENB : out std_logic;
    CTRLOUT_UA_PREG66_ENB : out std_logic;
    CTRLOUT_UA_PREG67_ENB : out std_logic;
    CTRLOUT_UA_PREG68_ENB : out std_logic;
    CTRLOUT_UA_PREG69_ENB : out std_logic;
    CTRLOUT_UA_PREG70_ENB : out std_logic;
    CTRLOUT_UA_PREG71_ENB : out std_logic;
    CTRLOUT_UA_PREG72_ENB : out std_logic;
    CTRLOUT_UA_PREG73_ENB : out std_logic;
    CTRLOUT_UA_PREG74_ENB : out std_logic;
    CTRLOUT_UA_PREG75_ENB : out std_logic;
    CTRLOUT_UA_PREG76_ENB : out std_logic;
    CTRLOUT_UA_PREG77_ENB : out std_logic;
    CTRLOUT_UA_PREG78_ENB : out std_logic;
    CTRLOUT_UA_PREG79_ENB : out std_logic;
    CTRLOUT_UA_PREG80_ENB : out std_logic;
    CTRLOUT_UA_PREG81_ENB : out std_logic;
    CTRLOUT_UA_PREG82_ENB : out std_logic;
    CTRLOUT_UA_PREG83_ENB : out std_logic;
    CTRLOUT_UA_PREG84_ENB : out std_logic;
    CTRLOUT_UA_PREG85_ENB : out std_logic;
    CTRLOUT_UA_PREG86_ENB : out std_logic;
    CTRLOUT_UA_PREG87_ENB : out std_logic;
    CTRLOUT_UA_PREG88_ENB : out std_logic;
    CTRLOUT_UA_PREG89_ENB : out std_logic;
    CTRLOUT_UA_PREG90_ENB : out std_logic;
    CTRLOUT_UA_PREG91_ENB : out std_logic;
    CTRLOUT_UA_PREG92_ENB : out std_logic;
    CTRLOUT_UA_PREG93_ENB : out std_logic;
    CTRLOUT_UA_PREG94_ENB : out std_logic;
    CTRLOUT_UA_PREG95_ENB : out std_logic;
    CTRLOUT_UA_PREG96_ENB : out std_logic;
    CTRLOUT_UA_PREG97_ENB : out std_logic;
    CTRLOUT_UA_PREG98_ENB : out std_logic;
    CTRLOUT_UA_PREG99_ENB : out std_logic;
    CTRLOUT_UA_PREG100_ENB : out std_logic;
    CTRLOUT_UA_PREG101_ENB : out std_logic;
    CTRLOUT_UA_PREG102_ENB : out std_logic;
    CTRLOUT_UA_PREG103_ENB : out std_logic;
    CTRLOUT_UA_PREG104_ENB : out std_logic;
    CTRLOUT_UA_PREG105_ENB : out std_logic;
    CTRLOUT_UA_PREG106_ENB : out std_logic;
    CTRLOUT_UA_PREG107_ENB : out std_logic;
    CTRLOUT_UA_PREG108_ENB : out std_logic;
    CTRLOUT_UA_PREG109_ENB : out std_logic;
    CTRLOUT_UA_PREG110_ENB : out std_logic;
    CTRLOUT_UA_PREG111_ENB : out std_logic;
    CTRLOUT_UA_PREG112_ENB : out std_logic;
    CTRLOUT_UA_PREG113_ENB : out std_logic;
    CTRLOUT_UA_PREG114_ENB : out std_logic;
    CTRLOUT_UA_PREG115_ENB : out std_logic;
    CTRLOUT_UA_PREG116_ENB : out std_logic;
    CTRLOUT_UA_PREG117_ENB : out std_logic;
    CTRLOUT_UA_PREG118_ENB : out std_logic;
    CTRLOUT_UA_PREG119_ENB : out std_logic;
    CTRLOUT_UA_PREG120_ENB : out std_logic
  );
  end component rtg_controller;

  component rtg_mux2to1_w32
  port (
    SEL : in std_logic;
    DIN0 : in std_logic_vector(31 downto 0);
    DIN1 : in std_logic_vector(31 downto 0);
    DOUT : out std_logic_vector(31 downto 0)
  );
  end component rtg_mux2to1_w32;

  component rtg_mux3to1_w32
  port (
    SEL : in std_logic_vector(1 downto 0);
    DIN0 : in std_logic_vector(31 downto 0);
    DIN1 : in std_logic_vector(31 downto 0);
    DIN2 : in std_logic_vector(31 downto 0);
    DOUT : out std_logic_vector(31 downto 0)
  );
  end component rtg_mux3to1_w32;

  component rtg_mux2to1_w5
  port (
    SEL : in std_logic;
    DIN0 : in std_logic_vector(4 downto 0);
    DIN1 : in std_logic_vector(4 downto 0);
    DOUT : out std_logic_vector(4 downto 0)
  );
  end component rtg_mux2to1_w5;

  component rtg_mux3to1_w5
  port (
    SEL : in std_logic_vector(1 downto 0);
    DIN0 : in std_logic_vector(4 downto 0);
    DIN1 : in std_logic_vector(4 downto 0);
    DIN2 : in std_logic_vector(4 downto 0);
    DOUT : out std_logic_vector(4 downto 0)
  );
  end component rtg_mux3to1_w5;

  component rtg_mux5to1_w32
  port (
    SEL : in std_logic_vector(2 downto 0);
    DIN0 : in std_logic_vector(31 downto 0);
    DIN1 : in std_logic_vector(31 downto 0);
    DIN2 : in std_logic_vector(31 downto 0);
    DIN3 : in std_logic_vector(31 downto 0);
    DIN4 : in std_logic_vector(31 downto 0);
    DOUT : out std_logic_vector(31 downto 0)
  );
  end component rtg_mux5to1_w32;

  component rtg_mux4to1_w32
  port (
    SEL : in std_logic_vector(1 downto 0);
    DIN0 : in std_logic_vector(31 downto 0);
    DIN1 : in std_logic_vector(31 downto 0);
    DIN2 : in std_logic_vector(31 downto 0);
    DIN3 : in std_logic_vector(31 downto 0);
    DOUT : out std_logic_vector(31 downto 0)
  );
  end component rtg_mux4to1_w32;

  component rtg_mux2to1_w1
  port (
    SEL : in std_logic;
    DIN0 : in std_logic;
    DIN1 : in std_logic;
    DOUT : out std_logic
  );
  end component rtg_mux2to1_w1;

  component rtg_register_w32
  port (
    CLK : in std_logic;
    RST : in std_logic;
    ENB : in std_logic;
    DIN : in std_logic_vector(31 downto 0);
    DOUT : out std_logic_vector(31 downto 0)
  );
  end component rtg_register_w32;

  component rtg_register_w5
  port (
    CLK : in std_logic;
    RST : in std_logic;
    ENB : in std_logic;
    DIN : in std_logic_vector(4 downto 0);
    DOUT : out std_logic_vector(4 downto 0)
  );
  end component rtg_register_w5;


  signal uf_cpc_data_out : std_logic_vector(31 downto 0);
  signal uf_imem_data_in : std_logic_vector(63 downto 0);
  signal bitrange28to24_00 : std_logic_vector(4 downto 0);
  signal uf_gpr_data_out0 : std_logic_vector(31 downto 0);
  signal bitrange15to0_00 : std_logic_vector(15 downto 0);
  signal uf_fwul0_data_out : std_logic_vector(31 downto 0);
  signal uf_ext1_data_out : std_logic_vector(31 downto 0);
  signal ua_preg19_dout : std_logic_vector(4 downto 0);
  signal ua_preg00_dout : std_logic_vector(31 downto 0);
  signal bitrange20to16_00 : std_logic_vector(4 downto 0);
  signal concat_00 : std_logic_vector(31 downto 0);
  signal ua_preg20_dout : std_logic_vector(4 downto 0);
  signal concat_02 : std_logic_vector(4 downto 0);
  signal const_32h00000004 : std_logic_vector(31 downto 0);
  signal const_b0 : std_logic;
  signal ua_preg22_dout : std_logic_vector(4 downto 0);
  signal uf_adder2_result : std_logic_vector(31 downto 0);
  signal ua_preg23_dout : std_logic_vector(4 downto 0);
  signal concat_01 : std_logic_vector(31 downto 0);
  signal ua_preg24_dout : std_logic_vector(4 downto 0);
  signal ua_preg21_dout : std_logic_vector(31 downto 0);
  signal uf_gpr_data_out1 : std_logic_vector(31 downto 0);
  signal concat_03 : std_logic_vector(31 downto 0);
  signal concat_06 : std_logic_vector(31 downto 0);
  signal concat_05 : std_logic_vector(31 downto 0);
  signal concat_04 : std_logic_vector(31 downto 0);
  signal bitrange1to0_00 : std_logic_vector(1 downto 0);
  signal uf_muxw32p4_data_out : std_logic_vector(31 downto 0);
  signal concat_09 : std_logic_vector(31 downto 0);
  signal concat_08 : std_logic_vector(31 downto 0);
  signal concat_07 : std_logic_vector(31 downto 0);
  signal concat_10 : std_logic_vector(31 downto 0);
  signal concat_11 : std_logic_vector(4 downto 0);
  signal uf_gpr_data_out2 : std_logic_vector(31 downto 0);
  signal uf_alu1_result : std_logic_vector(31 downto 0);
  signal const_b1 : std_logic;
  signal ua_preg04_dout : std_logic_vector(31 downto 0);
  signal concat_12 : std_logic_vector(31 downto 0);
  signal const_5h00 : std_logic_vector(4 downto 0);
  signal ua_preg08_dout : std_logic_vector(31 downto 0);
  signal ua_preg09_dout : std_logic_vector(31 downto 0);
  signal concat_15 : std_logic_vector(31 downto 0);
  signal concat_14 : std_logic_vector(31 downto 0);
  signal concat_13 : std_logic_vector(31 downto 0);
  signal ua_preg07_dout : std_logic_vector(31 downto 0);
  signal concat_16 : std_logic_vector(31 downto 0);
  signal concat_17 : std_logic_vector(31 downto 0);
  signal concat_20 : std_logic_vector(31 downto 0);
  signal concat_19 : std_logic_vector(31 downto 0);
  signal concat_18 : std_logic_vector(31 downto 0);
  signal bitrange12to8_00 : std_logic_vector(4 downto 0);
  signal uf_fwul1_data_out : std_logic_vector(31 downto 0);
  signal uf_fwul2_data_out : std_logic_vector(31 downto 0);
  signal uf_gpr_data_out3 : std_logic_vector(31 downto 0);
  signal concat_21 : std_logic_vector(31 downto 0);
  signal concat_22 : std_logic_vector(31 downto 0);
  signal const_5h1f : std_logic_vector(4 downto 0);
  signal concat_23 : std_logic_vector(31 downto 0);
  signal ua_preg02_dout : std_logic_vector(31 downto 0);
  signal uf_fwu0_data_out : std_logic_vector(31 downto 0);
  signal ua_preg05_dout : std_logic_vector(31 downto 0);
  signal ua_preg06_dout : std_logic_vector(31 downto 0);
  signal bitrange31to0_00 : std_logic_vector(31 downto 0);
  signal bitrange63to32_00 : std_logic_vector(31 downto 0);
  signal uf_div1_q : std_logic_vector(31 downto 0);
  signal uf_div1_r : std_logic_vector(31 downto 0);
  signal uf_hi_data_out : std_logic_vector(31 downto 0);
  signal uf_lo_data_out : std_logic_vector(31 downto 0);
  signal bitrange4to0_00 : std_logic_vector(4 downto 0);
  signal uf_sft1_data_out : std_logic_vector(31 downto 0);
  signal bitrange4to0_01 : std_logic_vector(4 downto 0);
  signal concat_25 : std_logic_vector(31 downto 0);
  signal concat_26 : std_logic_vector(31 downto 0);
  signal concat_27 : std_logic_vector(31 downto 0);
  signal ua_preg03_dout : std_logic_vector(31 downto 0);
  signal const_32h00000060 : std_logic_vector(31 downto 0);
  signal const_32h00000030 : std_logic_vector(31 downto 0);
  signal uf_sysreg_data_out : std_logic_vector(31 downto 0);
  signal uf_dmem_data_in : std_logic_vector(31 downto 0);
  signal uf_ireg_data_out : std_logic_vector(63 downto 0);
  signal bitrange7to0_00 : std_logic_vector(7 downto 0);
  signal bitrange15to8_00 : std_logic_vector(7 downto 0);
  signal bitrange23to16_00 : std_logic_vector(7 downto 0);
  signal bitrange31to24_00 : std_logic_vector(7 downto 0);
  signal bitrange7to0_01 : std_logic_vector(7 downto 0);
  signal bitrange15to8_01 : std_logic_vector(7 downto 0);
  signal bitrange23to16_01 : std_logic_vector(7 downto 0);
  signal bitrange31to24_01 : std_logic_vector(7 downto 0);
  signal bitrange4to1_00 : std_logic_vector(3 downto 0);
  signal bitrange31to2_00 : std_logic_vector(29 downto 0);
  signal const_bv00 : std_logic_vector(1 downto 0);
  signal bitrange23to16_02 : std_logic_vector(7 downto 0);
  signal bitrange15to8_02 : std_logic_vector(7 downto 0);
  signal bitrange7to0_02 : std_logic_vector(7 downto 0);
  signal bitrange7to0_03 : std_logic_vector(7 downto 0);
  signal bitrange15to8_03 : std_logic_vector(7 downto 0);
  signal bitrange23to16_03 : std_logic_vector(7 downto 0);
  signal bitrange31to24_03 : std_logic_vector(7 downto 0);
  signal bitrange31to24_02 : std_logic_vector(7 downto 0);
  signal bitrange7to0_04 : std_logic_vector(7 downto 0);
  signal bitrange15to8_04 : std_logic_vector(7 downto 0);
  signal bitrange23to16_04 : std_logic_vector(7 downto 0);
  signal bitrange31to24_04 : std_logic_vector(7 downto 0);
  signal bitrange4to1_01 : std_logic_vector(3 downto 0);
  signal ua_preg13_dout : std_logic_vector(31 downto 0);
  signal bitrange7to0_05 : std_logic_vector(7 downto 0);
  signal bitrange15to8_05 : std_logic_vector(7 downto 0);
  signal bitrange23to16_05 : std_logic_vector(7 downto 0);
  signal bitrange31to24_05 : std_logic_vector(7 downto 0);
  signal ua_preg01_dout : std_logic_vector(31 downto 0);
  signal bitrange31to2_01 : std_logic_vector(29 downto 0);
  signal ua_preg18_dout : std_logic_vector(31 downto 0);
  signal bitrange7to0_06 : std_logic_vector(7 downto 0);
  signal bitrange15to8_06 : std_logic_vector(7 downto 0);
  signal bitrange23to16_06 : std_logic_vector(7 downto 0);
  signal bitrange31to24_06 : std_logic_vector(7 downto 0);
  signal ua_preg17_dout : std_logic_vector(31 downto 0);
  signal bitrange7to0_08 : std_logic_vector(7 downto 0);
  signal bitrange15to8_07 : std_logic_vector(7 downto 0);
  signal bitrange23to16_07 : std_logic_vector(7 downto 0);
  signal bitrange31to24_07 : std_logic_vector(7 downto 0);
  signal bitrange31to28_00 : std_logic_vector(3 downto 0);
  signal bitrange25to0_00 : std_logic_vector(25 downto 0);
  signal bitrange29to0_00 : std_logic_vector(29 downto 0);
  signal uf_alu1_flag : std_logic_vector(3 downto 0);
  signal bitpos2_00 : std_logic;
  signal bitpos1_00 : std_logic;
  signal bitor_00 : std_logic;
  signal uf_mul1_result : std_logic_vector(63 downto 0);
  signal ua_preg25_dout : std_logic_vector(31 downto 0);
  signal const_24h000000 : std_logic_vector(23 downto 0);
  signal bitrange7to0_07 : std_logic_vector(7 downto 0);
  signal bitrange1to0_01 : std_logic_vector(1 downto 0);
  signal cmpeq_03 : std_logic;
  signal cmpeq_04 : std_logic;
  signal const_31h00000000 : std_logic_vector(30 downto 0);
  signal bitor_01 : std_logic;
  signal bitrange3to2_00 : std_logic_vector(1 downto 0);
  signal cmpeq_05 : std_logic;
  signal const_16h0000 : std_logic_vector(15 downto 0);
  signal cmpeq_00 : std_logic;
  signal cmpneq_00 : std_logic;
  signal cmpeq_01 : std_logic;
  signal cmpneq_01 : std_logic;
  signal cmpeq_02 : std_logic;
  signal cmpneq_02 : std_logic;
  signal ua_preg26_dout : std_logic_vector(31 downto 0);
  signal ua_preg27_dout : std_logic_vector(31 downto 0);
  signal ua_mux02_dout : std_logic_vector(31 downto 0);
  signal ua_mux03_dout : std_logic_vector(31 downto 0);
  signal ua_preg30_dout : std_logic_vector(4 downto 0);
  signal ua_preg31_dout : std_logic_vector(4 downto 0);
  signal ua_preg33_dout : std_logic_vector(31 downto 0);
  signal ua_preg34_dout : std_logic_vector(31 downto 0);
  signal ua_preg35_dout : std_logic_vector(31 downto 0);
  signal ua_mux09_dout : std_logic_vector(4 downto 0);
  signal ua_mux10_dout : std_logic_vector(4 downto 0);
  signal ua_mux11_dout : std_logic_vector(4 downto 0);
  signal ua_mux12_dout : std_logic_vector(31 downto 0);
  signal ua_mux13_dout : std_logic_vector(31 downto 0);
  signal ua_preg36_dout : std_logic_vector(31 downto 0);
  signal ua_preg38_dout : std_logic_vector(31 downto 0);
  signal ua_mux16_dout : std_logic_vector(31 downto 0);
  signal ua_mux17_dout : std_logic_vector(31 downto 0);
  signal ua_mux18_dout : std_logic_vector(31 downto 0);
  signal ua_mux19_dout : std_logic_vector(31 downto 0);
  signal ua_mux20_dout : std_logic_vector(31 downto 0);
  signal ua_preg39_dout : std_logic_vector(31 downto 0);
  signal ua_preg40_dout : std_logic_vector(31 downto 0);
  signal ua_mux23_dout : std_logic_vector(4 downto 0);
  signal ua_mux24_dout : std_logic_vector(31 downto 0);
  signal ua_mux25_dout : std_logic_vector(31 downto 0);
  signal ua_mux26_dout : std_logic;
  signal ua_mux27_dout : std_logic;
  signal ua_mux28_dout : std_logic_vector(31 downto 0);
  signal ua_preg41_dout : std_logic_vector(31 downto 0);
  signal ua_mux30_dout : std_logic_vector(31 downto 0);
  signal ua_preg42_dout : std_logic_vector(31 downto 0);
  signal ua_preg43_dout : std_logic_vector(31 downto 0);
  signal ua_preg44_dout : std_logic_vector(31 downto 0);
  signal ua_preg45_dout : std_logic_vector(31 downto 0);
  signal ua_preg46_dout : std_logic_vector(31 downto 0);
  signal ua_preg48_dout : std_logic_vector(31 downto 0);
  signal ua_preg49_dout : std_logic_vector(31 downto 0);
  signal ua_preg50_dout : std_logic_vector(31 downto 0);
  signal ua_mux39_dout : std_logic_vector(4 downto 0);
  signal ua_mux40_dout : std_logic_vector(4 downto 0);
  signal ua_preg51_dout : std_logic_vector(4 downto 0);
  signal ua_preg52_dout : std_logic_vector(4 downto 0);
  signal ua_preg53_dout : std_logic_vector(4 downto 0);
  signal ua_preg55_dout : std_logic_vector(4 downto 0);
  signal ua_preg56_dout : std_logic_vector(4 downto 0);
  signal ua_preg59_dout : std_logic_vector(4 downto 0);
  signal ua_preg60_dout : std_logic_vector(4 downto 0);
  signal ua_mux48_dout : std_logic_vector(31 downto 0);
  signal ua_preg61_dout : std_logic_vector(31 downto 0);
  signal ua_mux50_dout : std_logic_vector(31 downto 0);
  signal ua_preg62_dout : std_logic_vector(31 downto 0);
  signal ua_preg63_dout : std_logic_vector(31 downto 0);
  signal ua_preg64_dout : std_logic_vector(31 downto 0);
  signal ua_preg65_dout : std_logic_vector(31 downto 0);
  signal ua_preg66_dout : std_logic_vector(31 downto 0);
  signal ua_preg68_dout : std_logic_vector(31 downto 0);
  signal ua_preg69_dout : std_logic_vector(31 downto 0);
  signal ua_preg70_dout : std_logic_vector(31 downto 0);
  signal ua_mux59_dout : std_logic_vector(4 downto 0);
  signal ua_mux60_dout : std_logic_vector(4 downto 0);
  signal ua_preg71_dout : std_logic_vector(4 downto 0);
  signal ua_preg72_dout : std_logic_vector(4 downto 0);
  signal ua_preg73_dout : std_logic_vector(4 downto 0);
  signal ua_preg75_dout : std_logic_vector(4 downto 0);
  signal ua_preg76_dout : std_logic_vector(4 downto 0);
  signal ua_preg79_dout : std_logic_vector(4 downto 0);
  signal ua_preg80_dout : std_logic_vector(4 downto 0);
  signal ua_mux68_dout : std_logic_vector(31 downto 0);
  signal ua_preg81_dout : std_logic_vector(31 downto 0);
  signal ua_mux70_dout : std_logic_vector(31 downto 0);
  signal ua_preg82_dout : std_logic_vector(31 downto 0);
  signal ua_preg83_dout : std_logic_vector(31 downto 0);
  signal ua_preg84_dout : std_logic_vector(31 downto 0);
  signal ua_preg85_dout : std_logic_vector(31 downto 0);
  signal ua_preg86_dout : std_logic_vector(31 downto 0);
  signal ua_preg88_dout : std_logic_vector(31 downto 0);
  signal ua_preg89_dout : std_logic_vector(31 downto 0);
  signal ua_preg90_dout : std_logic_vector(31 downto 0);
  signal ua_mux79_dout : std_logic_vector(4 downto 0);
  signal ua_mux80_dout : std_logic_vector(4 downto 0);
  signal ua_preg91_dout : std_logic_vector(4 downto 0);
  signal ua_preg92_dout : std_logic_vector(4 downto 0);
  signal ua_preg93_dout : std_logic_vector(4 downto 0);
  signal ua_preg95_dout : std_logic_vector(4 downto 0);
  signal ua_preg96_dout : std_logic_vector(4 downto 0);
  signal ua_preg99_dout : std_logic_vector(4 downto 0);
  signal ua_preg100_dout : std_logic_vector(4 downto 0);
  signal ua_mux88_dout : std_logic_vector(31 downto 0);
  signal ua_preg101_dout : std_logic_vector(31 downto 0);
  signal ua_mux90_dout : std_logic_vector(31 downto 0);
  signal ua_preg102_dout : std_logic_vector(31 downto 0);
  signal ua_preg103_dout : std_logic_vector(31 downto 0);
  signal ua_preg104_dout : std_logic_vector(31 downto 0);
  signal ua_preg105_dout : std_logic_vector(31 downto 0);
  signal ua_preg106_dout : std_logic_vector(31 downto 0);
  signal ua_preg108_dout : std_logic_vector(31 downto 0);
  signal ua_preg109_dout : std_logic_vector(31 downto 0);
  signal ua_preg110_dout : std_logic_vector(31 downto 0);
  signal ua_mux99_dout : std_logic_vector(4 downto 0);
  signal ua_preg111_dout : std_logic_vector(4 downto 0);
  signal ua_preg112_dout : std_logic_vector(4 downto 0);
  signal ua_preg113_dout : std_logic_vector(4 downto 0);
  signal ua_preg115_dout : std_logic_vector(4 downto 0);
  signal ua_preg116_dout : std_logic_vector(4 downto 0);
  signal ua_preg119_dout : std_logic_vector(4 downto 0);
  signal ua_preg120_dout : std_logic_vector(4 downto 0);
  signal ua_mux107_dout : std_logic_vector(31 downto 0);
  signal ua_mux108_dout : std_logic_vector(31 downto 0);
  signal ua_mux109_dout : std_logic_vector(31 downto 0);
  signal ua_mux110_dout : std_logic_vector(31 downto 0);
  signal uf_add1_result : std_logic_vector(31 downto 0);
  signal ua_preg10_dout : std_logic_vector(31 downto 0);
  signal ua_preg11_dout : std_logic_vector(31 downto 0);
  signal ua_preg12_dout : std_logic_vector(31 downto 0);
  signal uf_fwul3_data_out : std_logic_vector(31 downto 0);
  signal ua_preg14_dout : std_logic_vector(31 downto 0);
  signal ua_preg15_dout : std_logic_vector(31 downto 0);
  signal ua_preg16_dout : std_logic_vector(31 downto 0);
  signal concat_24 : std_logic_vector(31 downto 0);
  signal ua_mux00_dout : std_logic_vector(31 downto 0);
  signal ua_mux01_dout : std_logic_vector(31 downto 0);
  signal ua_mux04_dout : std_logic_vector(4 downto 0);
  signal ua_preg28_dout : std_logic_vector(4 downto 0);
  signal ua_preg29_dout : std_logic_vector(4 downto 0);
  signal ua_mux05_dout : std_logic_vector(4 downto 0);
  signal ua_mux06_dout : std_logic_vector(31 downto 0);
  signal ua_preg32_dout : std_logic_vector(31 downto 0);
  signal ua_mux07_dout : std_logic_vector(31 downto 0);
  signal ua_mux08_dout : std_logic_vector(31 downto 0);
  signal ua_mux14_dout : std_logic_vector(31 downto 0);
  signal ua_mux15_dout : std_logic_vector(31 downto 0);
  signal ua_preg37_dout : std_logic_vector(31 downto 0);
  signal ua_mux21_dout : std_logic_vector(31 downto 0);
  signal ua_mux22_dout : std_logic_vector(31 downto 0);
  signal ua_mux29_dout : std_logic_vector(31 downto 0);
  signal ua_mux31_dout : std_logic_vector(31 downto 0);
  signal ua_mux32_dout : std_logic_vector(31 downto 0);
  signal ua_mux33_dout : std_logic_vector(31 downto 0);
  signal ua_mux34_dout : std_logic_vector(31 downto 0);
  signal ua_mux35_dout : std_logic_vector(31 downto 0);
  signal ua_mux36_dout : std_logic_vector(31 downto 0);
  signal ua_preg47_dout : std_logic_vector(31 downto 0);
  signal ua_mux37_dout : std_logic_vector(31 downto 0);
  signal ua_mux38_dout : std_logic_vector(31 downto 0);
  signal ua_mux41_dout : std_logic_vector(4 downto 0);
  signal ua_mux42_dout : std_logic_vector(4 downto 0);
  signal ua_mux43_dout : std_logic_vector(4 downto 0);
  signal ua_mux44_dout : std_logic_vector(4 downto 0);
  signal ua_preg54_dout : std_logic_vector(4 downto 0);
  signal ua_mux45_dout : std_logic_vector(4 downto 0);
  signal ua_mux46_dout : std_logic_vector(4 downto 0);
  signal ua_preg57_dout : std_logic_vector(4 downto 0);
  signal ua_preg58_dout : std_logic_vector(4 downto 0);
  signal ua_mux47_dout : std_logic_vector(4 downto 0);
  signal ua_mux49_dout : std_logic_vector(31 downto 0);
  signal ua_mux51_dout : std_logic_vector(31 downto 0);
  signal ua_mux52_dout : std_logic_vector(31 downto 0);
  signal ua_mux53_dout : std_logic_vector(31 downto 0);
  signal ua_mux54_dout : std_logic_vector(31 downto 0);
  signal ua_mux55_dout : std_logic_vector(31 downto 0);
  signal ua_mux56_dout : std_logic_vector(31 downto 0);
  signal ua_preg67_dout : std_logic_vector(31 downto 0);
  signal ua_mux57_dout : std_logic_vector(31 downto 0);
  signal ua_mux58_dout : std_logic_vector(31 downto 0);
  signal ua_mux61_dout : std_logic_vector(4 downto 0);
  signal ua_mux62_dout : std_logic_vector(4 downto 0);
  signal ua_mux63_dout : std_logic_vector(4 downto 0);
  signal ua_mux64_dout : std_logic_vector(4 downto 0);
  signal ua_preg74_dout : std_logic_vector(4 downto 0);
  signal ua_mux65_dout : std_logic_vector(4 downto 0);
  signal ua_mux66_dout : std_logic_vector(4 downto 0);
  signal ua_preg77_dout : std_logic_vector(4 downto 0);
  signal ua_preg78_dout : std_logic_vector(4 downto 0);
  signal ua_mux67_dout : std_logic_vector(4 downto 0);
  signal ua_mux69_dout : std_logic_vector(31 downto 0);
  signal ua_mux71_dout : std_logic_vector(31 downto 0);
  signal ua_mux72_dout : std_logic_vector(31 downto 0);
  signal ua_mux73_dout : std_logic_vector(31 downto 0);
  signal ua_mux74_dout : std_logic_vector(31 downto 0);
  signal ua_mux75_dout : std_logic_vector(31 downto 0);
  signal ua_mux76_dout : std_logic_vector(31 downto 0);
  signal ua_preg87_dout : std_logic_vector(31 downto 0);
  signal ua_mux77_dout : std_logic_vector(31 downto 0);
  signal ua_mux78_dout : std_logic_vector(31 downto 0);
  signal ua_mux81_dout : std_logic_vector(4 downto 0);
  signal ua_mux82_dout : std_logic_vector(4 downto 0);
  signal ua_mux83_dout : std_logic_vector(4 downto 0);
  signal ua_mux84_dout : std_logic_vector(4 downto 0);
  signal ua_preg94_dout : std_logic_vector(4 downto 0);
  signal ua_mux85_dout : std_logic_vector(4 downto 0);
  signal ua_mux86_dout : std_logic_vector(4 downto 0);
  signal ua_preg97_dout : std_logic_vector(4 downto 0);
  signal ua_preg98_dout : std_logic_vector(4 downto 0);
  signal ua_mux87_dout : std_logic_vector(4 downto 0);
  signal ua_mux89_dout : std_logic_vector(31 downto 0);
  signal ua_mux91_dout : std_logic_vector(31 downto 0);
  signal ua_mux92_dout : std_logic_vector(31 downto 0);
  signal ua_mux93_dout : std_logic_vector(31 downto 0);
  signal ua_mux94_dout : std_logic_vector(31 downto 0);
  signal ua_mux95_dout : std_logic_vector(31 downto 0);
  signal ua_mux96_dout : std_logic_vector(31 downto 0);
  signal ua_preg107_dout : std_logic_vector(31 downto 0);
  signal ua_mux97_dout : std_logic_vector(31 downto 0);
  signal ua_mux98_dout : std_logic_vector(31 downto 0);
  signal ua_mux100_dout : std_logic_vector(4 downto 0);
  signal ua_mux101_dout : std_logic_vector(4 downto 0);
  signal ua_mux102_dout : std_logic_vector(4 downto 0);
  signal ua_mux103_dout : std_logic_vector(4 downto 0);
  signal ua_preg114_dout : std_logic_vector(4 downto 0);
  signal ua_mux104_dout : std_logic_vector(4 downto 0);
  signal ua_mux105_dout : std_logic_vector(4 downto 0);
  signal ua_preg117_dout : std_logic_vector(4 downto 0);
  signal ua_preg118_dout : std_logic_vector(4 downto 0);
  signal ua_mux106_dout : std_logic_vector(4 downto 0);
  signal uf_alu1_cin : std_logic;
  signal uf_alu1_mode : std_logic_vector(4 downto 0);
  signal uf_div1_reset : std_logic;
  signal uf_div1_clear : std_logic;
  signal uf_div1_start : std_logic;
  signal uf_div1_mode : std_logic;
  signal uf_div1_fin : std_logic;
  signal uf_ext1_mode : std_logic;
  signal uf_mul1_reset : std_logic;
  signal uf_mul1_mode : std_logic;
  signal uf_mul1_start : std_logic;
  signal uf_mul1_clear : std_logic;
  signal uf_mul1_fin : std_logic;
  signal uf_hi_reset : std_logic;
  signal uf_hi_enb : std_logic;
  signal uf_lo_reset : std_logic;
  signal uf_lo_enb : std_logic;
  signal uf_gpr_reset : std_logic;
  signal uf_gpr_w_enb0 : std_logic;
  signal uf_gpr_w_enb1 : std_logic;
  signal uf_ireg_reset : std_logic;
  signal uf_ireg_enb : std_logic;
  signal uf_dmem_req_out : std_logic;
  signal uf_dmem_ack_in : std_logic;
  signal uf_dmem_cancel_out : std_logic;
  signal uf_dmem_rw_out : std_logic;
  signal uf_dmem_mode_out : std_logic_vector(1 downto 0);
  signal uf_dmem_ext_out : std_logic;
  signal uf_cpc_load : std_logic;
  signal uf_cpc_reset : std_logic;
  signal uf_cpc_hold : std_logic;
  signal uf_sft1_mode : std_logic_vector(1 downto 0);
  signal uf_sysreg_reset : std_logic;
  signal uf_sysreg_enb : std_logic;
  signal uf_fwu0_fw1 : std_logic;
  signal uf_fwu0_fw2 : std_logic;
  signal uf_fwu0_fw3 : std_logic;
  signal uf_fwu0_fw4 : std_logic;
  signal uf_fwu0_fw5 : std_logic;
  signal uf_fwu0_fw6 : std_logic;
  signal uf_fwu0_fw7 : std_logic;
  signal uf_fwu0_fw8 : std_logic;
  signal uf_fwu1_fw1 : std_logic;
  signal uf_fwu1_fw2 : std_logic;
  signal uf_fwu1_fw3 : std_logic;
  signal uf_fwu1_fw4 : std_logic;
  signal uf_fwu1_fw5 : std_logic;
  signal uf_fwu1_fw6 : std_logic;
  signal uf_fwu1_fw7 : std_logic;
  signal uf_fwu1_fw8 : std_logic;
  signal uf_fwu2_fw1 : std_logic;
  signal uf_fwu2_fw2 : std_logic;
  signal uf_fwu2_fw3 : std_logic;
  signal uf_fwu2_fw4 : std_logic;
  signal uf_fwu2_fw5 : std_logic;
  signal uf_fwu2_fw6 : std_logic;
  signal uf_fwu2_fw7 : std_logic;
  signal uf_fwu2_fw8 : std_logic;
  signal uf_fwu3_fw1 : std_logic;
  signal uf_fwu3_fw2 : std_logic;
  signal uf_fwu3_fw3 : std_logic;
  signal uf_fwu3_fw4 : std_logic;
  signal uf_fwu3_fw5 : std_logic;
  signal uf_fwu3_fw6 : std_logic;
  signal uf_fwu3_fw7 : std_logic;
  signal uf_fwu3_fw8 : std_logic;
  signal uf_imem_rw_out : std_logic;
  signal uf_fwu4_fw1 : std_logic;
  signal uf_fwu4_fw2 : std_logic;
  signal uf_fwu4_fw3 : std_logic;
  signal uf_fwu4_fw4 : std_logic;
  signal uf_fwu4_fw5 : std_logic;
  signal uf_fwu4_fw6 : std_logic;
  signal uf_fwu4_fw7 : std_logic;
  signal uf_fwu4_fw8 : std_logic;
  signal uf_fwul0_fw1 : std_logic;
  signal uf_fwul0_fw2 : std_logic;
  signal uf_fwul0_fw3 : std_logic;
  signal uf_fwul0_fw4 : std_logic;
  signal uf_fwul0_fw5 : std_logic;
  signal uf_fwul0_fw6 : std_logic;
  signal uf_fwul0_fw7 : std_logic;
  signal uf_fwul0_fw8 : std_logic;
  signal uf_fwul0_lock1 : std_logic;
  signal uf_fwul0_lock2 : std_logic;
  signal uf_fwul0_lock3 : std_logic;
  signal uf_fwul0_lock4 : std_logic;
  signal uf_fwul0_lock5 : std_logic;
  signal uf_fwul0_lock6 : std_logic;
  signal uf_fwul0_lock : std_logic;
  signal uf_fwul0_dummy_start : std_logic;
  signal uf_fwul0_dummy_cancel : std_logic;
  signal uf_fwul1_fw1 : std_logic;
  signal uf_fwul1_fw2 : std_logic;
  signal uf_fwul1_fw3 : std_logic;
  signal uf_fwul1_fw4 : std_logic;
  signal uf_fwul1_fw5 : std_logic;
  signal uf_fwul1_fw6 : std_logic;
  signal uf_fwul1_fw7 : std_logic;
  signal uf_fwul1_fw8 : std_logic;
  signal uf_fwul1_lock1 : std_logic;
  signal uf_fwul1_lock2 : std_logic;
  signal uf_fwul1_lock3 : std_logic;
  signal uf_fwul1_lock4 : std_logic;
  signal uf_fwul1_lock5 : std_logic;
  signal uf_fwul1_lock6 : std_logic;
  signal uf_fwul1_lock : std_logic;
  signal uf_fwul1_dummy_start : std_logic;
  signal uf_fwul1_dummy_cancel : std_logic;
  signal uf_fwul2_fw1 : std_logic;
  signal uf_fwul2_fw2 : std_logic;
  signal uf_fwul2_fw3 : std_logic;
  signal uf_fwul2_fw4 : std_logic;
  signal uf_fwul2_fw5 : std_logic;
  signal uf_fwul2_fw6 : std_logic;
  signal uf_fwul2_fw7 : std_logic;
  signal uf_fwul2_fw8 : std_logic;
  signal uf_fwul2_lock1 : std_logic;
  signal uf_fwul2_lock2 : std_logic;
  signal uf_fwul2_lock3 : std_logic;
  signal uf_fwul2_lock4 : std_logic;
  signal uf_fwul2_lock5 : std_logic;
  signal uf_fwul2_lock6 : std_logic;
  signal uf_fwul2_lock : std_logic;
  signal uf_fwul2_dummy_start : std_logic;
  signal uf_fwul2_dummy_cancel : std_logic;
  signal uf_fwul3_fw1 : std_logic;
  signal uf_fwul3_fw2 : std_logic;
  signal uf_fwul3_fw3 : std_logic;
  signal uf_fwul3_fw4 : std_logic;
  signal uf_fwul3_fw5 : std_logic;
  signal uf_fwul3_fw6 : std_logic;
  signal uf_fwul3_fw7 : std_logic;
  signal uf_fwul3_fw8 : std_logic;
  signal uf_fwul3_lock1 : std_logic;
  signal uf_fwul3_lock2 : std_logic;
  signal uf_fwul3_lock3 : std_logic;
  signal uf_fwul3_lock4 : std_logic;
  signal uf_fwul3_lock5 : std_logic;
  signal uf_fwul3_lock6 : std_logic;
  signal uf_fwul3_lock : std_logic;
  signal uf_fwul3_dummy_start : std_logic;
  signal uf_fwul3_dummy_cancel : std_logic;
  signal ua_mux00_sel : std_logic;
  signal ua_mux01_sel : std_logic_vector(1 downto 0);
  signal ua_mux02_sel : std_logic_vector(1 downto 0);
  signal ua_mux03_sel : std_logic_vector(1 downto 0);
  signal ua_mux04_sel : std_logic;
  signal ua_mux05_sel : std_logic_vector(1 downto 0);
  signal ua_mux06_sel : std_logic_vector(1 downto 0);
  signal ua_mux07_sel : std_logic_vector(2 downto 0);
  signal ua_mux08_sel : std_logic_vector(1 downto 0);
  signal ua_mux09_sel : std_logic;
  signal ua_mux10_sel : std_logic_vector(1 downto 0);
  signal ua_mux11_sel : std_logic;
  signal ua_mux12_sel : std_logic;
  signal ua_mux13_sel : std_logic;
  signal ua_mux14_sel : std_logic;
  signal ua_mux15_sel : std_logic;
  signal ua_mux16_sel : std_logic_vector(1 downto 0);
  signal ua_mux17_sel : std_logic_vector(1 downto 0);
  signal ua_mux18_sel : std_logic_vector(1 downto 0);
  signal ua_mux19_sel : std_logic;
  signal ua_mux20_sel : std_logic_vector(1 downto 0);
  signal ua_mux21_sel : std_logic_vector(1 downto 0);
  signal ua_mux22_sel : std_logic;
  signal ua_mux23_sel : std_logic;
  signal ua_mux24_sel : std_logic;
  signal ua_mux25_sel : std_logic;
  signal ua_mux26_sel : std_logic;
  signal ua_mux27_sel : std_logic;
  signal ua_mux28_sel : std_logic_vector(2 downto 0);
  signal ua_mux29_sel : std_logic_vector(1 downto 0);
  signal ua_mux30_sel : std_logic_vector(1 downto 0);
  signal ua_mux31_sel : std_logic_vector(2 downto 0);
  signal ua_mux32_sel : std_logic_vector(1 downto 0);
  signal ua_mux33_sel : std_logic_vector(1 downto 0);
  signal ua_mux34_sel : std_logic_vector(2 downto 0);
  signal ua_mux35_sel : std_logic_vector(1 downto 0);
  signal ua_mux36_sel : std_logic_vector(1 downto 0);
  signal ua_mux37_sel : std_logic_vector(2 downto 0);
  signal ua_mux38_sel : std_logic_vector(1 downto 0);
  signal ua_mux39_sel : std_logic;
  signal ua_mux40_sel : std_logic;
  signal ua_mux41_sel : std_logic_vector(1 downto 0);
  signal ua_mux42_sel : std_logic;
  signal ua_mux43_sel : std_logic_vector(1 downto 0);
  signal ua_mux44_sel : std_logic;
  signal ua_mux45_sel : std_logic_vector(1 downto 0);
  signal ua_mux46_sel : std_logic;
  signal ua_mux47_sel : std_logic_vector(1 downto 0);
  signal ua_mux48_sel : std_logic_vector(2 downto 0);
  signal ua_mux49_sel : std_logic_vector(1 downto 0);
  signal ua_mux50_sel : std_logic_vector(1 downto 0);
  signal ua_mux51_sel : std_logic_vector(2 downto 0);
  signal ua_mux52_sel : std_logic_vector(1 downto 0);
  signal ua_mux53_sel : std_logic_vector(1 downto 0);
  signal ua_mux54_sel : std_logic_vector(2 downto 0);
  signal ua_mux55_sel : std_logic_vector(1 downto 0);
  signal ua_mux56_sel : std_logic_vector(1 downto 0);
  signal ua_mux57_sel : std_logic_vector(2 downto 0);
  signal ua_mux58_sel : std_logic_vector(1 downto 0);
  signal ua_mux59_sel : std_logic_vector(1 downto 0);
  signal ua_mux60_sel : std_logic;
  signal ua_mux61_sel : std_logic_vector(1 downto 0);
  signal ua_mux62_sel : std_logic;
  signal ua_mux63_sel : std_logic_vector(1 downto 0);
  signal ua_mux64_sel : std_logic;
  signal ua_mux65_sel : std_logic_vector(1 downto 0);
  signal ua_mux66_sel : std_logic;
  signal ua_mux67_sel : std_logic_vector(1 downto 0);
  signal ua_mux68_sel : std_logic_vector(2 downto 0);
  signal ua_mux69_sel : std_logic_vector(1 downto 0);
  signal ua_mux70_sel : std_logic_vector(1 downto 0);
  signal ua_mux71_sel : std_logic_vector(2 downto 0);
  signal ua_mux72_sel : std_logic_vector(1 downto 0);
  signal ua_mux73_sel : std_logic_vector(1 downto 0);
  signal ua_mux74_sel : std_logic_vector(2 downto 0);
  signal ua_mux75_sel : std_logic_vector(1 downto 0);
  signal ua_mux76_sel : std_logic_vector(1 downto 0);
  signal ua_mux77_sel : std_logic_vector(2 downto 0);
  signal ua_mux78_sel : std_logic_vector(1 downto 0);
  signal ua_mux79_sel : std_logic;
  signal ua_mux80_sel : std_logic;
  signal ua_mux81_sel : std_logic_vector(1 downto 0);
  signal ua_mux82_sel : std_logic;
  signal ua_mux83_sel : std_logic_vector(1 downto 0);
  signal ua_mux84_sel : std_logic;
  signal ua_mux85_sel : std_logic_vector(1 downto 0);
  signal ua_mux86_sel : std_logic;
  signal ua_mux87_sel : std_logic_vector(1 downto 0);
  signal ua_mux88_sel : std_logic_vector(2 downto 0);
  signal ua_mux89_sel : std_logic_vector(1 downto 0);
  signal ua_mux90_sel : std_logic_vector(1 downto 0);
  signal ua_mux91_sel : std_logic_vector(2 downto 0);
  signal ua_mux92_sel : std_logic_vector(1 downto 0);
  signal ua_mux93_sel : std_logic_vector(1 downto 0);
  signal ua_mux94_sel : std_logic_vector(2 downto 0);
  signal ua_mux95_sel : std_logic_vector(1 downto 0);
  signal ua_mux96_sel : std_logic_vector(1 downto 0);
  signal ua_mux97_sel : std_logic_vector(2 downto 0);
  signal ua_mux98_sel : std_logic_vector(1 downto 0);
  signal ua_mux99_sel : std_logic;
  signal ua_mux100_sel : std_logic_vector(1 downto 0);
  signal ua_mux101_sel : std_logic;
  signal ua_mux102_sel : std_logic_vector(1 downto 0);
  signal ua_mux103_sel : std_logic;
  signal ua_mux104_sel : std_logic_vector(1 downto 0);
  signal ua_mux105_sel : std_logic;
  signal ua_mux106_sel : std_logic_vector(1 downto 0);
  signal ua_mux107_sel : std_logic_vector(1 downto 0);
  signal ua_mux108_sel : std_logic_vector(1 downto 0);
  signal ua_mux109_sel : std_logic_vector(1 downto 0);
  signal ua_mux110_sel : std_logic_vector(1 downto 0);
  signal ua_preg00_enb : std_logic;
  signal ua_preg01_enb : std_logic;
  signal ua_preg02_enb : std_logic;
  signal ua_preg03_enb : std_logic;
  signal ua_preg04_enb : std_logic;
  signal ua_preg05_enb : std_logic;
  signal ua_preg06_enb : std_logic;
  signal ua_preg07_enb : std_logic;
  signal ua_preg08_enb : std_logic;
  signal ua_preg09_enb : std_logic;
  signal ua_preg10_enb : std_logic;
  signal ua_preg11_enb : std_logic;
  signal ua_preg12_enb : std_logic;
  signal ua_preg13_enb : std_logic;
  signal ua_preg14_enb : std_logic;
  signal ua_preg15_enb : std_logic;
  signal ua_preg16_enb : std_logic;
  signal ua_preg17_enb : std_logic;
  signal ua_preg18_enb : std_logic;
  signal ua_preg19_enb : std_logic;
  signal ua_preg20_enb : std_logic;
  signal ua_preg21_enb : std_logic;
  signal ua_preg22_enb : std_logic;
  signal ua_preg23_enb : std_logic;
  signal ua_preg24_enb : std_logic;
  signal ua_preg25_enb : std_logic;
  signal ua_preg26_enb : std_logic;
  signal ua_preg27_enb : std_logic;
  signal ua_preg28_enb : std_logic;
  signal ua_preg29_enb : std_logic;
  signal ua_preg30_enb : std_logic;
  signal ua_preg31_enb : std_logic;
  signal ua_preg32_enb : std_logic;
  signal ua_preg33_enb : std_logic;
  signal ua_preg34_enb : std_logic;
  signal ua_preg35_enb : std_logic;
  signal ua_preg36_enb : std_logic;
  signal ua_preg37_enb : std_logic;
  signal ua_preg38_enb : std_logic;
  signal ua_preg39_enb : std_logic;
  signal ua_preg40_enb : std_logic;
  signal ua_preg41_enb : std_logic;
  signal ua_preg42_enb : std_logic;
  signal ua_preg43_enb : std_logic;
  signal ua_preg44_enb : std_logic;
  signal ua_preg45_enb : std_logic;
  signal ua_preg46_enb : std_logic;
  signal ua_preg47_enb : std_logic;
  signal ua_preg48_enb : std_logic;
  signal ua_preg49_enb : std_logic;
  signal ua_preg50_enb : std_logic;
  signal ua_preg51_enb : std_logic;
  signal ua_preg52_enb : std_logic;
  signal ua_preg53_enb : std_logic;
  signal ua_preg54_enb : std_logic;
  signal ua_preg55_enb : std_logic;
  signal ua_preg56_enb : std_logic;
  signal ua_preg57_enb : std_logic;
  signal ua_preg58_enb : std_logic;
  signal ua_preg59_enb : std_logic;
  signal ua_preg60_enb : std_logic;
  signal ua_preg61_enb : std_logic;
  signal ua_preg62_enb : std_logic;
  signal ua_preg63_enb : std_logic;
  signal ua_preg64_enb : std_logic;
  signal ua_preg65_enb : std_logic;
  signal ua_preg66_enb : std_logic;
  signal ua_preg67_enb : std_logic;
  signal ua_preg68_enb : std_logic;
  signal ua_preg69_enb : std_logic;
  signal ua_preg70_enb : std_logic;
  signal ua_preg71_enb : std_logic;
  signal ua_preg72_enb : std_logic;
  signal ua_preg73_enb : std_logic;
  signal ua_preg74_enb : std_logic;
  signal ua_preg75_enb : std_logic;
  signal ua_preg76_enb : std_logic;
  signal ua_preg77_enb : std_logic;
  signal ua_preg78_enb : std_logic;
  signal ua_preg79_enb : std_logic;
  signal ua_preg80_enb : std_logic;
  signal ua_preg81_enb : std_logic;
  signal ua_preg82_enb : std_logic;
  signal ua_preg83_enb : std_logic;
  signal ua_preg84_enb : std_logic;
  signal ua_preg85_enb : std_logic;
  signal ua_preg86_enb : std_logic;
  signal ua_preg87_enb : std_logic;
  signal ua_preg88_enb : std_logic;
  signal ua_preg89_enb : std_logic;
  signal ua_preg90_enb : std_logic;
  signal ua_preg91_enb : std_logic;
  signal ua_preg92_enb : std_logic;
  signal ua_preg93_enb : std_logic;
  signal ua_preg94_enb : std_logic;
  signal ua_preg95_enb : std_logic;
  signal ua_preg96_enb : std_logic;
  signal ua_preg97_enb : std_logic;
  signal ua_preg98_enb : std_logic;
  signal ua_preg99_enb : std_logic;
  signal ua_preg100_enb : std_logic;
  signal ua_preg101_enb : std_logic;
  signal ua_preg102_enb : std_logic;
  signal ua_preg103_enb : std_logic;
  signal ua_preg104_enb : std_logic;
  signal ua_preg105_enb : std_logic;
  signal ua_preg106_enb : std_logic;
  signal ua_preg107_enb : std_logic;
  signal ua_preg108_enb : std_logic;
  signal ua_preg109_enb : std_logic;
  signal ua_preg110_enb : std_logic;
  signal ua_preg111_enb : std_logic;
  signal ua_preg112_enb : std_logic;
  signal ua_preg113_enb : std_logic;
  signal ua_preg114_enb : std_logic;
  signal ua_preg115_enb : std_logic;
  signal ua_preg116_enb : std_logic;
  signal ua_preg117_enb : std_logic;
  signal ua_preg118_enb : std_logic;
  signal ua_preg119_enb : std_logic;
  signal ua_preg120_enb : std_logic;
  signal unused_00 : std_logic;
  signal unused_01 : std_logic;
  signal unused_02 : std_logic;
  signal unused_03 : std_logic_vector(31 downto 0);
  signal unused_04 : std_logic_vector(31 downto 0);
  signal unused_05 : std_logic_vector(31 downto 0);
  signal unused_06 : std_logic_vector(31 downto 0);
  signal unused_07 : std_logic_vector(31 downto 0);
  signal unused_08 : std_logic_vector(31 downto 0);
  signal unused_09 : std_logic_vector(31 downto 0);
  signal unused_10 : std_logic_vector(31 downto 0);
  signal unused_11 : std_logic_vector(4 downto 0);
  signal unused_12 : std_logic_vector(4 downto 0);
  signal unused_13 : std_logic_vector(4 downto 0);
  signal unused_14 : std_logic_vector(4 downto 0);
  signal unused_15 : std_logic_vector(4 downto 0);
  signal unused_16 : std_logic_vector(4 downto 0);
  signal unused_17 : std_logic_vector(4 downto 0);
  signal unused_18 : std_logic_vector(4 downto 0);
  signal unused_19 : std_logic_vector(31 downto 0);
  signal unused_20 : std_logic_vector(31 downto 0);
  signal unused_21 : std_logic_vector(31 downto 0);
  signal unused_22 : std_logic_vector(31 downto 0);
  signal unused_23 : std_logic_vector(31 downto 0);
  signal unused_24 : std_logic_vector(31 downto 0);
  signal unused_25 : std_logic_vector(31 downto 0);
  signal unused_26 : std_logic_vector(31 downto 0);
  signal unused_27 : std_logic_vector(31 downto 0);
  signal unused_28 : std_logic_vector(4 downto 0);
  signal unused_29 : std_logic_vector(4 downto 0);
  signal unused_30 : std_logic_vector(4 downto 0);
  signal unused_31 : std_logic_vector(4 downto 0);
  signal unused_32 : std_logic_vector(4 downto 0);
  signal unused_33 : std_logic_vector(4 downto 0);
  signal unused_34 : std_logic_vector(4 downto 0);
  signal unused_35 : std_logic_vector(4 downto 0);
  signal unused_36 : std_logic_vector(4 downto 0);
  signal unused_37 : std_logic_vector(31 downto 0);
  signal unused_38 : std_logic_vector(31 downto 0);
  signal unused_39 : std_logic_vector(31 downto 0);
  signal unused_40 : std_logic_vector(31 downto 0);
  signal unused_41 : std_logic_vector(31 downto 0);
  signal unused_42 : std_logic_vector(31 downto 0);
  signal unused_43 : std_logic_vector(31 downto 0);
  signal unused_44 : std_logic_vector(31 downto 0);
  signal unused_45 : std_logic_vector(31 downto 0);
  signal unused_46 : std_logic_vector(31 downto 0);
  signal unused_47 : std_logic_vector(4 downto 0);
  signal unused_48 : std_logic_vector(4 downto 0);
  signal unused_49 : std_logic_vector(4 downto 0);
  signal unused_50 : std_logic_vector(4 downto 0);
  signal unused_51 : std_logic_vector(4 downto 0);
  signal unused_52 : std_logic_vector(4 downto 0);
  signal unused_53 : std_logic_vector(4 downto 0);
  signal unused_54 : std_logic_vector(4 downto 0);
  signal unused_55 : std_logic_vector(4 downto 0);
  signal unused_56 : std_logic_vector(31 downto 0);
  signal unused_57 : std_logic_vector(31 downto 0);
  signal unused_58 : std_logic_vector(31 downto 0);
  signal unused_59 : std_logic_vector(31 downto 0);
  signal unused_60 : std_logic_vector(31 downto 0);
  signal unused_61 : std_logic_vector(31 downto 0);
  signal unused_62 : std_logic_vector(31 downto 0);
  signal unused_63 : std_logic_vector(31 downto 0);
  signal unused_64 : std_logic_vector(31 downto 0);
  signal unused_65 : std_logic_vector(31 downto 0);
  signal unused_66 : std_logic_vector(4 downto 0);
  signal unused_67 : std_logic_vector(4 downto 0);
  signal unused_68 : std_logic_vector(4 downto 0);
  signal unused_69 : std_logic_vector(4 downto 0);
  signal unused_70 : std_logic_vector(4 downto 0);
  signal unused_71 : std_logic_vector(4 downto 0);
  signal unused_72 : std_logic_vector(4 downto 0);
  signal unused_73 : std_logic_vector(4 downto 0);
  signal unused_74 : std_logic_vector(4 downto 0);
  signal unused_75 : std_logic_vector(31 downto 0);
  signal unused_76 : std_logic;
  signal unused_77 : std_logic;
  signal unused_78 : std_logic_vector(63 downto 0);
  signal unused_79 : std_logic_vector(31 downto 0);
  signal unused_80 : std_logic_vector(31 downto 0);
  signal unused_81 : std_logic_vector(31 downto 0);
  signal unused_82 : std_logic_vector(31 downto 0);
  signal unused_83 : std_logic_vector(31 downto 0);
  signal unused_84 : std_logic_vector(31 downto 0);
  signal unused_85 : std_logic_vector(31 downto 0);
  signal unused_86 : std_logic_vector(31 downto 0);
  signal unused_87 : std_logic_vector(31 downto 0);
  signal unused_88 : std_logic_vector(4 downto 0);
  signal unused_89 : std_logic_vector(4 downto 0);
  signal unused_90 : std_logic_vector(4 downto 0);
  signal unused_91 : std_logic_vector(4 downto 0);
  signal unused_92 : std_logic_vector(4 downto 0);
  signal unused_93 : std_logic_vector(4 downto 0);
  signal unused_94 : std_logic_vector(4 downto 0);
  signal unused_95 : std_logic_vector(4 downto 0);
  signal unused_96 : std_logic_vector(4 downto 0);
  signal unused_97 : std_logic_vector(31 downto 0);
  signal unused_98 : std_logic_vector(31 downto 0);
  signal unused_99 : std_logic_vector(31 downto 0);
  signal unused_100 : std_logic_vector(4 downto 0);
  signal unused_101 : std_logic_vector(4 downto 0);
  signal unused_102 : std_logic_vector(4 downto 0);
  signal unused_103 : std_logic_vector(31 downto 0);
  signal unused_104 : std_logic_vector(31 downto 0);
  signal unused_105 : std_logic_vector(4 downto 0);
  signal unused_106 : std_logic_vector(4 downto 0);
  signal unused_107 : std_logic_vector(4 downto 0);
  signal unused_108 : std_logic_vector(31 downto 0);
  signal unused_109 : std_logic_vector(31 downto 0);
  signal unused_110 : std_logic_vector(4 downto 0);
  signal unused_111 : std_logic_vector(4 downto 0);
  signal unused_112 : std_logic_vector(4 downto 0);
  signal unused_113 : std_logic_vector(31 downto 0);
  signal unused_114 : std_logic_vector(31 downto 0);
  signal unused_115 : std_logic_vector(4 downto 0);
  signal unused_116 : std_logic_vector(4 downto 0);
  signal unused_117 : std_logic_vector(4 downto 0);
  signal unused_118 : std_logic_vector(31 downto 0);
  signal unused_119 : std_logic;

begin
  UF_ALU1 : fhm_alu_w32
    port map (
      a => ua_preg26_dout, 
      b => ua_preg27_dout, 
      cin => uf_alu1_cin, 
      mode => uf_alu1_mode, 
      result => uf_alu1_result, 
      flag => uf_alu1_flag
    );

  UF_ADD1 : fhm_adder_w32
    port map (
      a => uf_cpc_data_out, 
      b => concat_23, 
      cin => const_b0, 
      result => uf_add1_result, 
      cout => unused_00
    );

  UF_DIV1 : fhm_divider_w32
    port map (
      clock => CLK, 
      async_reset => Reset, 
      reset => uf_div1_reset, 
      clear => uf_div1_clear, 
      a => ua_preg05_dout, 
      b => ua_preg06_dout, 
      start => uf_div1_start, 
      mode => uf_div1_mode, 
      q => uf_div1_q, 
      r => uf_div1_r, 
      flag => unused_01, 
      fin => uf_div1_fin
    );

  UF_EXT1 : fhm_extender_w16
    port map (
      data_in => bitrange15to0_00, 
      mode => uf_ext1_mode, 
      data_out => uf_ext1_data_out
    );

  UF_MUL1 : fhm_multiplier_w32
    port map (
      clock => CLK, 
      async_reset => Reset, 
      reset => uf_mul1_reset, 
      a => ua_preg05_dout, 
      b => ua_preg06_dout, 
      mode => uf_mul1_mode, 
      start => uf_mul1_start, 
      clear => uf_mul1_clear, 
      result => uf_mul1_result, 
      fin => uf_mul1_fin
    );

  UF_HI : fhm_register_w32
    port map (
      clock => CLK, 
      async_reset => Reset, 
      reset => uf_hi_reset, 
      enb => uf_hi_enb, 
      data_in => ua_mux02_dout, 
      data_out => uf_hi_data_out
    );

  UF_LO : fhm_register_w32
    port map (
      clock => CLK, 
      async_reset => Reset, 
      reset => uf_lo_reset, 
      enb => uf_lo_enb, 
      data_in => ua_mux03_dout, 
      data_out => uf_lo_data_out
    );

  UF_GPR : fhm_registerfile_w32
    port map (
      clock => CLK, 
      async_reset => Reset, 
      reset => uf_gpr_reset, 
      w_enb0 => uf_gpr_w_enb0, 
      w_enb1 => uf_gpr_w_enb1, 
      w_sel0 => ua_preg30_dout, 
      w_sel1 => ua_preg24_dout, 
      data_in0 => ua_preg33_dout, 
      data_in1 => ua_preg21_dout, 
      r_sel0 => ua_mux09_dout, 
      r_sel1 => ua_mux10_dout, 
      r_sel2 => ua_mux11_dout, 
      r_sel3 => concat_11, 
      data_out0 => uf_gpr_data_out0, 
      data_out1 => uf_gpr_data_out1, 
      data_out2 => uf_gpr_data_out2, 
      data_out3 => uf_gpr_data_out3
    );

  UF_IReg : fhm_register_w64
    port map (
      clock => CLK, 
      async_reset => Reset, 
      reset => uf_ireg_reset, 
      enb => uf_ireg_enb, 
      data_in => uf_imem_data_in, 
      data_out => uf_ireg_data_out
    );

  UF_Dmem : fhm_mifu_w32
    port map (
      req_out => uf_dmem_req_out, 
      ack_in => uf_dmem_ack_in, 
      cancel_out => uf_dmem_cancel_out, 
      req2mem => DataReq, 
      ack2cpu => DataAck, 
      cancel2mem => DataCancel, 
      addr_out => ua_mux16_dout, 
      data_in => uf_dmem_data_in, 
      aderr_in => unused_02, 
      addr2mem => DataAB, 
      data2cpu => DataDIB, 
      aderr2cpu => DataAdrerr, 
      rw_out => uf_dmem_rw_out, 
      data_out => ua_mux19_dout, 
      rw2mem => DataRW, 
      data2mem => DataDOB, 
      mode_out => uf_dmem_mode_out, 
      ext_out => uf_dmem_ext_out, 
      mode2mem => DataMode, 
      ext2mem => DataExt
    );

  UF_CPC : fhm_pcu_w32
    port map (
      clock => CLK, 
      async_reset => Reset, 
      load => uf_cpc_load, 
      reset => uf_cpc_reset, 
      hold => uf_cpc_hold, 
      data_in => ua_mux20_dout, 
      data_out => uf_cpc_data_out
    );

  UF_SFT1 : fhm_shifter_w32
    port map (
      data_in => ua_preg40_dout, 
      mode => uf_sft1_mode, 
      ctrl => ua_mux23_dout, 
      data_out => uf_sft1_data_out
    );

  UF_SYSREG : fhm_register_w32
    port map (
      clock => CLK, 
      async_reset => Reset, 
      reset => uf_sysreg_reset, 
      enb => uf_sysreg_enb, 
      data_in => ua_preg03_dout, 
      data_out => uf_sysreg_data_out
    );

  UF_FWU0 : fhm_fwu_w32
    port map (
      data0 => uf_gpr_data_out0, 
      data1 => unused_03, 
      data2 => unused_04, 
      data3 => unused_05, 
      data4 => unused_06, 
      data5 => unused_07, 
      data6 => unused_08, 
      data7 => unused_09, 
      data8 => unused_10, 
      num0 => bitrange28to24_00, 
      num1 => unused_11, 
      num2 => unused_12, 
      num3 => unused_13, 
      num4 => unused_14, 
      num5 => unused_15, 
      num6 => unused_16, 
      num7 => unused_17, 
      num8 => unused_18, 
      fw1 => uf_fwu0_fw1, 
      fw2 => uf_fwu0_fw2, 
      fw3 => uf_fwu0_fw3, 
      fw4 => uf_fwu0_fw4, 
      fw5 => uf_fwu0_fw5, 
      fw6 => uf_fwu0_fw6, 
      fw7 => uf_fwu0_fw7, 
      fw8 => uf_fwu0_fw8, 
      data_out => uf_fwu0_data_out
    );

  UF_FWU1 : fhm_fwu_w32
    port map (
      data0 => unused_19, 
      data1 => unused_20, 
      data2 => unused_21, 
      data3 => unused_22, 
      data4 => unused_23, 
      data5 => unused_24, 
      data6 => unused_25, 
      data7 => unused_26, 
      data8 => unused_27, 
      num0 => unused_28, 
      num1 => unused_29, 
      num2 => unused_30, 
      num3 => unused_31, 
      num4 => unused_32, 
      num5 => unused_33, 
      num6 => unused_34, 
      num7 => unused_35, 
      num8 => unused_36, 
      fw1 => uf_fwu1_fw1, 
      fw2 => uf_fwu1_fw2, 
      fw3 => uf_fwu1_fw3, 
      fw4 => uf_fwu1_fw4, 
      fw5 => uf_fwu1_fw5, 
      fw6 => uf_fwu1_fw6, 
      fw7 => uf_fwu1_fw7, 
      fw8 => uf_fwu1_fw8, 
      data_out => unused_37
    );

  UF_FWU2 : fhm_fwu_w32
    port map (
      data0 => unused_38, 
      data1 => unused_39, 
      data2 => unused_40, 
      data3 => unused_41, 
      data4 => unused_42, 
      data5 => unused_43, 
      data6 => unused_44, 
      data7 => unused_45, 
      data8 => unused_46, 
      num0 => unused_47, 
      num1 => unused_48, 
      num2 => unused_49, 
      num3 => unused_50, 
      num4 => unused_51, 
      num5 => unused_52, 
      num6 => unused_53, 
      num7 => unused_54, 
      num8 => unused_55, 
      fw1 => uf_fwu2_fw1, 
      fw2 => uf_fwu2_fw2, 
      fw3 => uf_fwu2_fw3, 
      fw4 => uf_fwu2_fw4, 
      fw5 => uf_fwu2_fw5, 
      fw6 => uf_fwu2_fw6, 
      fw7 => uf_fwu2_fw7, 
      fw8 => uf_fwu2_fw8, 
      data_out => unused_56
    );

  UF_FWU3 : fhm_fwu_w32
    port map (
      data0 => unused_57, 
      data1 => unused_58, 
      data2 => unused_59, 
      data3 => unused_60, 
      data4 => unused_61, 
      data5 => unused_62, 
      data6 => unused_63, 
      data7 => unused_64, 
      data8 => unused_65, 
      num0 => unused_66, 
      num1 => unused_67, 
      num2 => unused_68, 
      num3 => unused_69, 
      num4 => unused_70, 
      num5 => unused_71, 
      num6 => unused_72, 
      num7 => unused_73, 
      num8 => unused_74, 
      fw1 => uf_fwu3_fw1, 
      fw2 => uf_fwu3_fw2, 
      fw3 => uf_fwu3_fw3, 
      fw4 => uf_fwu3_fw4, 
      fw5 => uf_fwu3_fw5, 
      fw6 => uf_fwu3_fw6, 
      fw7 => uf_fwu3_fw7, 
      fw8 => uf_fwu3_fw8, 
      data_out => unused_75
    );

  UF_ADDER2 : fhm_adder_w32
    port map (
      a => ua_mux24_dout, 
      b => ua_mux25_dout, 
      cin => ua_mux27_dout, 
      result => uf_adder2_result, 
      cout => unused_76
    );

  UF_Imem : fhm_mifu_w64
    port map (
      addr_out => uf_cpc_data_out, 
      data_in => uf_imem_data_in, 
      aderr_in => unused_77, 
      addr2mem => imaddr, 
      data2cpu => imdat_in, 
      aderr2cpu => imaddr_err, 
      rw_out => uf_imem_rw_out, 
      data_out => unused_78, 
      rw2mem => imrw, 
      data2mem => imdat_out
    );

  UF_FWU4 : fhm_fwu_w32
    port map (
      data0 => unused_79, 
      data1 => unused_80, 
      data2 => unused_81, 
      data3 => unused_82, 
      data4 => unused_83, 
      data5 => unused_84, 
      data6 => unused_85, 
      data7 => unused_86, 
      data8 => unused_87, 
      num0 => unused_88, 
      num1 => unused_89, 
      num2 => unused_90, 
      num3 => unused_91, 
      num4 => unused_92, 
      num5 => unused_93, 
      num6 => unused_94, 
      num7 => unused_95, 
      num8 => unused_96, 
      fw1 => uf_fwu4_fw1, 
      fw2 => uf_fwu4_fw2, 
      fw3 => uf_fwu4_fw3, 
      fw4 => uf_fwu4_fw4, 
      fw5 => uf_fwu4_fw5, 
      fw6 => uf_fwu4_fw6, 
      fw7 => uf_fwu4_fw7, 
      fw8 => uf_fwu4_fw8, 
      data_out => unused_97
    );

  UF_FWUL0 : fhm_fwu_lock_w32
    port map (
      data0 => uf_gpr_data_out0, 
      data1 => ua_mux28_dout, 
      data2 => unused_98, 
      data3 => ua_mux30_dout, 
      data4 => unused_99, 
      data5 => ua_preg44_dout, 
      data6 => concat_01, 
      data7 => ua_preg48_dout, 
      data8 => ua_preg21_dout, 
      num0 => ua_mux39_dout, 
      num1 => ua_mux40_dout, 
      num2 => unused_100, 
      num3 => ua_preg52_dout, 
      num4 => unused_101, 
      num5 => ua_preg55_dout, 
      num6 => ua_preg23_dout, 
      num7 => ua_preg59_dout, 
      num8 => ua_preg24_dout, 
      locknum1 => ua_preg19_dout, 
      locknum2 => concat_02, 
      locknum3 => ua_preg20_dout, 
      locknum4 => ua_preg22_dout, 
      locknum5 => ua_preg23_dout, 
      locknum6 => unused_102, 
      fw1 => uf_fwul0_fw1, 
      fw2 => uf_fwul0_fw2, 
      fw3 => uf_fwul0_fw3, 
      fw4 => uf_fwul0_fw4, 
      fw5 => uf_fwul0_fw5, 
      fw6 => uf_fwul0_fw6, 
      fw7 => uf_fwul0_fw7, 
      fw8 => uf_fwul0_fw8, 
      lock1 => uf_fwul0_lock1, 
      lock2 => uf_fwul0_lock2, 
      lock3 => uf_fwul0_lock3, 
      lock4 => uf_fwul0_lock4, 
      lock5 => uf_fwul0_lock5, 
      lock6 => uf_fwul0_lock6, 
      data_out => uf_fwul0_data_out, 
      lock => uf_fwul0_lock, 
      dummy_start => uf_fwul0_dummy_start, 
      dummy_cancel => uf_fwul0_dummy_cancel
    );

  UF_FWUL1 : fhm_fwu_lock_w32
    port map (
      data0 => uf_gpr_data_out1, 
      data1 => ua_mux48_dout, 
      data2 => unused_103, 
      data3 => ua_mux50_dout, 
      data4 => unused_104, 
      data5 => ua_preg64_dout, 
      data6 => concat_01, 
      data7 => ua_preg68_dout, 
      data8 => ua_preg21_dout, 
      num0 => ua_mux59_dout, 
      num1 => ua_mux60_dout, 
      num2 => unused_105, 
      num3 => ua_preg72_dout, 
      num4 => unused_106, 
      num5 => ua_preg75_dout, 
      num6 => ua_preg23_dout, 
      num7 => ua_preg79_dout, 
      num8 => ua_preg24_dout, 
      locknum1 => ua_preg19_dout, 
      locknum2 => concat_02, 
      locknum3 => ua_preg20_dout, 
      locknum4 => ua_preg22_dout, 
      locknum5 => ua_preg23_dout, 
      locknum6 => unused_107, 
      fw1 => uf_fwul1_fw1, 
      fw2 => uf_fwul1_fw2, 
      fw3 => uf_fwul1_fw3, 
      fw4 => uf_fwul1_fw4, 
      fw5 => uf_fwul1_fw5, 
      fw6 => uf_fwul1_fw6, 
      fw7 => uf_fwul1_fw7, 
      fw8 => uf_fwul1_fw8, 
      lock1 => uf_fwul1_lock1, 
      lock2 => uf_fwul1_lock2, 
      lock3 => uf_fwul1_lock3, 
      lock4 => uf_fwul1_lock4, 
      lock5 => uf_fwul1_lock5, 
      lock6 => uf_fwul1_lock6, 
      data_out => uf_fwul1_data_out, 
      lock => uf_fwul1_lock, 
      dummy_start => uf_fwul1_dummy_start, 
      dummy_cancel => uf_fwul1_dummy_cancel
    );

  UF_FWUL2 : fhm_fwu_lock_w32
    port map (
      data0 => uf_gpr_data_out2, 
      data1 => ua_mux68_dout, 
      data2 => unused_108, 
      data3 => ua_mux70_dout, 
      data4 => unused_109, 
      data5 => ua_preg84_dout, 
      data6 => concat_01, 
      data7 => ua_preg88_dout, 
      data8 => ua_preg21_dout, 
      num0 => ua_mux79_dout, 
      num1 => ua_mux80_dout, 
      num2 => unused_110, 
      num3 => ua_preg92_dout, 
      num4 => unused_111, 
      num5 => ua_preg95_dout, 
      num6 => ua_preg23_dout, 
      num7 => ua_preg99_dout, 
      num8 => ua_preg24_dout, 
      locknum1 => ua_preg19_dout, 
      locknum2 => concat_02, 
      locknum3 => ua_preg20_dout, 
      locknum4 => ua_preg22_dout, 
      locknum5 => ua_preg23_dout, 
      locknum6 => unused_112, 
      fw1 => uf_fwul2_fw1, 
      fw2 => uf_fwul2_fw2, 
      fw3 => uf_fwul2_fw3, 
      fw4 => uf_fwul2_fw4, 
      fw5 => uf_fwul2_fw5, 
      fw6 => uf_fwul2_fw6, 
      fw7 => uf_fwul2_fw7, 
      fw8 => uf_fwul2_fw8, 
      lock1 => uf_fwul2_lock1, 
      lock2 => uf_fwul2_lock2, 
      lock3 => uf_fwul2_lock3, 
      lock4 => uf_fwul2_lock4, 
      lock5 => uf_fwul2_lock5, 
      lock6 => uf_fwul2_lock6, 
      data_out => uf_fwul2_data_out, 
      lock => uf_fwul2_lock, 
      dummy_start => uf_fwul2_dummy_start, 
      dummy_cancel => uf_fwul2_dummy_cancel
    );

  UF_FWUL3 : fhm_fwu_lock_w32
    port map (
      data0 => uf_gpr_data_out3, 
      data1 => ua_mux88_dout, 
      data2 => unused_113, 
      data3 => ua_mux90_dout, 
      data4 => unused_114, 
      data5 => ua_preg104_dout, 
      data6 => concat_01, 
      data7 => ua_preg108_dout, 
      data8 => ua_preg21_dout, 
      num0 => concat_11, 
      num1 => ua_mux99_dout, 
      num2 => unused_115, 
      num3 => ua_preg112_dout, 
      num4 => unused_116, 
      num5 => ua_preg115_dout, 
      num6 => ua_preg23_dout, 
      num7 => ua_preg119_dout, 
      num8 => ua_preg24_dout, 
      locknum1 => ua_preg19_dout, 
      locknum2 => concat_02, 
      locknum3 => ua_preg20_dout, 
      locknum4 => ua_preg22_dout, 
      locknum5 => ua_preg23_dout, 
      locknum6 => unused_117, 
      fw1 => uf_fwul3_fw1, 
      fw2 => uf_fwul3_fw2, 
      fw3 => uf_fwul3_fw3, 
      fw4 => uf_fwul3_fw4, 
      fw5 => uf_fwul3_fw5, 
      fw6 => uf_fwul3_fw6, 
      fw7 => uf_fwul3_fw7, 
      fw8 => uf_fwul3_fw8, 
      lock1 => uf_fwul3_lock1, 
      lock2 => uf_fwul3_lock2, 
      lock3 => uf_fwul3_lock3, 
      lock4 => uf_fwul3_lock4, 
      lock5 => uf_fwul3_lock5, 
      lock6 => uf_fwul3_lock6, 
      data_out => uf_fwul3_data_out, 
      lock => uf_fwul3_lock, 
      dummy_start => uf_fwul3_dummy_start, 
      dummy_cancel => uf_fwul3_dummy_cancel
    );

  UF_MUXw32p4 : fhm_multiplexor_w32
    port map (
      data_in0 => ua_mux107_dout, 
      data_in1 => ua_mux108_dout, 
      data_in2 => ua_mux109_dout, 
      data_in3 => ua_mux110_dout, 
      sel => bitrange1to0_00, 
      data_out => uf_muxw32p4_data_out
    );

  UA_CTRL : rtg_controller
    port map (
      CLK => CLK, 
      RST => Reset, 
      INTREQ_RESET => Reset, 
      CTRLIN_CMPEQ_00_EX => cmpeq_00, 
      CTRLIN_CMPNEQ_00_EX => cmpneq_00, 
      CTRLIN_CMPEQ_01_EX => cmpeq_01, 
      CTRLIN_CMPNEQ_01_EX => cmpneq_01, 
      CTRLIN_CMPEQ_02_EX => cmpeq_02, 
      CTRLIN_CMPNEQ_02_EX => cmpneq_02, 
      CTRLIN_FWUL0_LOCK => uf_fwul0_lock, 
      CTRLOUT_FWUL0_DUMMY_CANCEL => uf_fwul0_dummy_cancel, 
      CTRLIN_DMEM_ACK_IN => uf_dmem_ack_in, 
      CTRLOUT_DMEM_CANCEL_OUT => uf_dmem_cancel_out, 
      CTRLIN_FWUL1_LOCK => uf_fwul1_lock, 
      CTRLOUT_FWUL1_DUMMY_CANCEL => uf_fwul1_dummy_cancel, 
      CTRLIN_FWUL2_LOCK => uf_fwul2_lock, 
      CTRLOUT_FWUL2_DUMMY_CANCEL => uf_fwul2_dummy_cancel, 
      CTRLIN_FWUL3_LOCK => uf_fwul3_lock, 
      CTRLOUT_FWUL3_DUMMY_CANCEL => uf_fwul3_dummy_cancel, 
      DATAIN_CPC_DATA_OUT => uf_cpc_data_out, 
      DATAOUT_SAVED_PC => unused_118, 
      DATAOUT_DS_OFFSET => unused_119, 
      DATAIN_IREG_DATA_OUT => uf_ireg_data_out, 
      CTRLOUT_IMEM_RW_OUT => uf_imem_rw_out, 
      CTRLOUT_IREG_ENB => uf_ireg_enb, 
      CTRLOUT_CPC_HOLD => uf_cpc_hold, 
      CTRLOUT_EXT1_MODE => uf_ext1_mode, 
      CTRLOUT_ALU1_MODE => uf_alu1_mode, 
      CTRLOUT_ALU1_CIN => uf_alu1_cin, 
      CTRLOUT_FWUL0_LOCK1 => uf_fwul0_lock1, 
      CTRLOUT_FWUL1_LOCK1 => uf_fwul1_lock1, 
      CTRLOUT_FWUL2_LOCK1 => uf_fwul2_lock1, 
      CTRLOUT_FWUL3_LOCK1 => uf_fwul3_lock1, 
      CTRLOUT_DMEM_RW_OUT => uf_dmem_rw_out, 
      CTRLOUT_DMEM_MODE_OUT => uf_dmem_mode_out, 
      CTRLOUT_DMEM_EXT_OUT => uf_dmem_ext_out, 
      CTRLOUT_FWUL0_FW3 => uf_fwul0_fw3, 
      CTRLOUT_FWUL1_FW3 => uf_fwul1_fw3, 
      CTRLOUT_FWUL2_FW3 => uf_fwul2_fw3, 
      CTRLOUT_FWUL3_FW3 => uf_fwul3_fw3, 
      CTRLOUT_FWUL0_LOCK3 => uf_fwul0_lock3, 
      CTRLOUT_FWUL1_LOCK3 => uf_fwul1_lock3, 
      CTRLOUT_FWUL2_LOCK3 => uf_fwul2_lock3, 
      CTRLOUT_FWUL3_LOCK3 => uf_fwul3_lock3, 
      CTRLOUT_FWUL0_FW5 => uf_fwul0_fw5, 
      CTRLOUT_FWUL1_FW5 => uf_fwul1_fw5, 
      CTRLOUT_FWUL2_FW5 => uf_fwul2_fw5, 
      CTRLOUT_FWUL3_FW5 => uf_fwul3_fw5, 
      CTRLOUT_GPR_W_ENB0 => uf_gpr_w_enb0, 
      CTRLOUT_FWUL0_FW7 => uf_fwul0_fw7, 
      CTRLOUT_FWUL1_FW7 => uf_fwul1_fw7, 
      CTRLOUT_FWUL2_FW7 => uf_fwul2_fw7, 
      CTRLOUT_FWUL3_FW7 => uf_fwul3_fw7, 
      CTRLOUT_FWUL0_LOCK2 => uf_fwul0_lock2, 
      CTRLOUT_FWUL1_LOCK2 => uf_fwul1_lock2, 
      CTRLOUT_FWUL2_LOCK2 => uf_fwul2_lock2, 
      CTRLOUT_FWUL3_LOCK2 => uf_fwul3_lock2, 
      CTRLOUT_FWUL0_LOCK4 => uf_fwul0_lock4, 
      CTRLOUT_FWUL1_LOCK4 => uf_fwul1_lock4, 
      CTRLOUT_FWUL2_LOCK4 => uf_fwul2_lock4, 
      CTRLOUT_FWUL3_LOCK4 => uf_fwul3_lock4, 
      CTRLOUT_FWUL0_FW6 => uf_fwul0_fw6, 
      CTRLOUT_FWUL1_FW6 => uf_fwul1_fw6, 
      CTRLOUT_FWUL2_FW6 => uf_fwul2_fw6, 
      CTRLOUT_FWUL3_FW6 => uf_fwul3_fw6, 
      CTRLOUT_FWUL0_LOCK5 => uf_fwul0_lock5, 
      CTRLOUT_FWUL1_LOCK5 => uf_fwul1_lock5, 
      CTRLOUT_FWUL2_LOCK5 => uf_fwul2_lock5, 
      CTRLOUT_FWUL3_LOCK5 => uf_fwul3_lock5, 
      CTRLOUT_FWUL0_FW8 => uf_fwul0_fw8, 
      CTRLOUT_FWUL1_FW8 => uf_fwul1_fw8, 
      CTRLOUT_FWUL2_FW8 => uf_fwul2_fw8, 
      CTRLOUT_FWUL3_FW8 => uf_fwul3_fw8, 
      CTRLOUT_GPR_W_ENB1 => uf_gpr_w_enb1, 
      CTRLOUT_CPC_LOAD => uf_cpc_load, 
      CTRLOUT_FWUL0_FW1 => uf_fwul0_fw1, 
      CTRLOUT_FWUL1_FW1 => uf_fwul1_fw1, 
      CTRLOUT_FWUL2_FW1 => uf_fwul2_fw1, 
      CTRLOUT_FWUL3_FW1 => uf_fwul3_fw1, 
      CTRLOUT_MUL1_MODE => uf_mul1_mode, 
      CTRLOUT_LO_ENB => uf_lo_enb, 
      CTRLOUT_HI_ENB => uf_hi_enb, 
      CTRLOUT_DIV1_MODE => uf_div1_mode, 
      CTRLOUT_SFT1_MODE => uf_sft1_mode, 
      CTRLOUT_SYSREG_ENB => uf_sysreg_enb, 
      CTRLOUT_FWUL0_DUMMY_START => uf_fwul0_dummy_start, 
      CTRLOUT_DMEM_REQ_OUT => uf_dmem_req_out, 
      CTRLOUT_FWUL1_DUMMY_START => uf_fwul1_dummy_start, 
      CTRLOUT_FWUL2_DUMMY_START => uf_fwul2_dummy_start, 
      CTRLOUT_FWUL3_DUMMY_START => uf_fwul3_dummy_start, 
      CTRLOUT_IREG_RESET => uf_ireg_reset, 
      CTRLOUT_CPC_RESET => uf_cpc_reset, 
      CTRLOUT_GPR_RESET => uf_gpr_reset, 
      CTRLOUT_UA_MUX00_SEL => ua_mux00_sel, 
      CTRLOUT_UA_MUX01_SEL => ua_mux01_sel, 
      CTRLOUT_UA_MUX02_SEL => ua_mux02_sel, 
      CTRLOUT_UA_MUX03_SEL => ua_mux03_sel, 
      CTRLOUT_UA_MUX04_SEL => ua_mux04_sel, 
      CTRLOUT_UA_MUX05_SEL => ua_mux05_sel, 
      CTRLOUT_UA_MUX06_SEL => ua_mux06_sel, 
      CTRLOUT_UA_MUX07_SEL => ua_mux07_sel, 
      CTRLOUT_UA_MUX08_SEL => ua_mux08_sel, 
      CTRLOUT_UA_MUX09_SEL => ua_mux09_sel, 
      CTRLOUT_UA_MUX10_SEL => ua_mux10_sel, 
      CTRLOUT_UA_MUX11_SEL => ua_mux11_sel, 
      CTRLOUT_UA_MUX12_SEL => ua_mux12_sel, 
      CTRLOUT_UA_MUX13_SEL => ua_mux13_sel, 
      CTRLOUT_UA_MUX14_SEL => ua_mux14_sel, 
      CTRLOUT_UA_MUX15_SEL => ua_mux15_sel, 
      CTRLOUT_UA_MUX16_SEL => ua_mux16_sel, 
      CTRLOUT_UA_MUX17_SEL => ua_mux17_sel, 
      CTRLOUT_UA_MUX18_SEL => ua_mux18_sel, 
      CTRLOUT_UA_MUX19_SEL => ua_mux19_sel, 
      CTRLOUT_UA_MUX20_SEL => ua_mux20_sel, 
      CTRLOUT_UA_MUX21_SEL => ua_mux21_sel, 
      CTRLOUT_UA_MUX22_SEL => ua_mux22_sel, 
      CTRLOUT_UA_MUX23_SEL => ua_mux23_sel, 
      CTRLOUT_UA_MUX24_SEL => ua_mux24_sel, 
      CTRLOUT_UA_MUX25_SEL => ua_mux25_sel, 
      CTRLOUT_UA_MUX26_SEL => ua_mux26_sel, 
      CTRLOUT_UA_MUX27_SEL => ua_mux27_sel, 
      CTRLOUT_UA_MUX28_SEL => ua_mux28_sel, 
      CTRLOUT_UA_MUX29_SEL => ua_mux29_sel, 
      CTRLOUT_UA_MUX30_SEL => ua_mux30_sel, 
      CTRLOUT_UA_MUX31_SEL => ua_mux31_sel, 
      CTRLOUT_UA_MUX32_SEL => ua_mux32_sel, 
      CTRLOUT_UA_MUX33_SEL => ua_mux33_sel, 
      CTRLOUT_UA_MUX34_SEL => ua_mux34_sel, 
      CTRLOUT_UA_MUX35_SEL => ua_mux35_sel, 
      CTRLOUT_UA_MUX36_SEL => ua_mux36_sel, 
      CTRLOUT_UA_MUX37_SEL => ua_mux37_sel, 
      CTRLOUT_UA_MUX38_SEL => ua_mux38_sel, 
      CTRLOUT_UA_MUX39_SEL => ua_mux39_sel, 
      CTRLOUT_UA_MUX40_SEL => ua_mux40_sel, 
      CTRLOUT_UA_MUX41_SEL => ua_mux41_sel, 
      CTRLOUT_UA_MUX42_SEL => ua_mux42_sel, 
      CTRLOUT_UA_MUX43_SEL => ua_mux43_sel, 
      CTRLOUT_UA_MUX44_SEL => ua_mux44_sel, 
      CTRLOUT_UA_MUX45_SEL => ua_mux45_sel, 
      CTRLOUT_UA_MUX46_SEL => ua_mux46_sel, 
      CTRLOUT_UA_MUX47_SEL => ua_mux47_sel, 
      CTRLOUT_UA_MUX48_SEL => ua_mux48_sel, 
      CTRLOUT_UA_MUX49_SEL => ua_mux49_sel, 
      CTRLOUT_UA_MUX50_SEL => ua_mux50_sel, 
      CTRLOUT_UA_MUX51_SEL => ua_mux51_sel, 
      CTRLOUT_UA_MUX52_SEL => ua_mux52_sel, 
      CTRLOUT_UA_MUX53_SEL => ua_mux53_sel, 
      CTRLOUT_UA_MUX54_SEL => ua_mux54_sel, 
      CTRLOUT_UA_MUX55_SEL => ua_mux55_sel, 
      CTRLOUT_UA_MUX56_SEL => ua_mux56_sel, 
      CTRLOUT_UA_MUX57_SEL => ua_mux57_sel, 
      CTRLOUT_UA_MUX58_SEL => ua_mux58_sel, 
      CTRLOUT_UA_MUX59_SEL => ua_mux59_sel, 
      CTRLOUT_UA_MUX60_SEL => ua_mux60_sel, 
      CTRLOUT_UA_MUX61_SEL => ua_mux61_sel, 
      CTRLOUT_UA_MUX62_SEL => ua_mux62_sel, 
      CTRLOUT_UA_MUX63_SEL => ua_mux63_sel, 
      CTRLOUT_UA_MUX64_SEL => ua_mux64_sel, 
      CTRLOUT_UA_MUX65_SEL => ua_mux65_sel, 
      CTRLOUT_UA_MUX66_SEL => ua_mux66_sel, 
      CTRLOUT_UA_MUX67_SEL => ua_mux67_sel, 
      CTRLOUT_UA_MUX68_SEL => ua_mux68_sel, 
      CTRLOUT_UA_MUX69_SEL => ua_mux69_sel, 
      CTRLOUT_UA_MUX70_SEL => ua_mux70_sel, 
      CTRLOUT_UA_MUX71_SEL => ua_mux71_sel, 
      CTRLOUT_UA_MUX72_SEL => ua_mux72_sel, 
      CTRLOUT_UA_MUX73_SEL => ua_mux73_sel, 
      CTRLOUT_UA_MUX74_SEL => ua_mux74_sel, 
      CTRLOUT_UA_MUX75_SEL => ua_mux75_sel, 
      CTRLOUT_UA_MUX76_SEL => ua_mux76_sel, 
      CTRLOUT_UA_MUX77_SEL => ua_mux77_sel, 
      CTRLOUT_UA_MUX78_SEL => ua_mux78_sel, 
      CTRLOUT_UA_MUX79_SEL => ua_mux79_sel, 
      CTRLOUT_UA_MUX80_SEL => ua_mux80_sel, 
      CTRLOUT_UA_MUX81_SEL => ua_mux81_sel, 
      CTRLOUT_UA_MUX82_SEL => ua_mux82_sel, 
      CTRLOUT_UA_MUX83_SEL => ua_mux83_sel, 
      CTRLOUT_UA_MUX84_SEL => ua_mux84_sel, 
      CTRLOUT_UA_MUX85_SEL => ua_mux85_sel, 
      CTRLOUT_UA_MUX86_SEL => ua_mux86_sel, 
      CTRLOUT_UA_MUX87_SEL => ua_mux87_sel, 
      CTRLOUT_UA_MUX88_SEL => ua_mux88_sel, 
      CTRLOUT_UA_MUX89_SEL => ua_mux89_sel, 
      CTRLOUT_UA_MUX90_SEL => ua_mux90_sel, 
      CTRLOUT_UA_MUX91_SEL => ua_mux91_sel, 
      CTRLOUT_UA_MUX92_SEL => ua_mux92_sel, 
      CTRLOUT_UA_MUX93_SEL => ua_mux93_sel, 
      CTRLOUT_UA_MUX94_SEL => ua_mux94_sel, 
      CTRLOUT_UA_MUX95_SEL => ua_mux95_sel, 
      CTRLOUT_UA_MUX96_SEL => ua_mux96_sel, 
      CTRLOUT_UA_MUX97_SEL => ua_mux97_sel, 
      CTRLOUT_UA_MUX98_SEL => ua_mux98_sel, 
      CTRLOUT_UA_MUX99_SEL => ua_mux99_sel, 
      CTRLOUT_UA_MUX100_SEL => ua_mux100_sel, 
      CTRLOUT_UA_MUX101_SEL => ua_mux101_sel, 
      CTRLOUT_UA_MUX102_SEL => ua_mux102_sel, 
      CTRLOUT_UA_MUX103_SEL => ua_mux103_sel, 
      CTRLOUT_UA_MUX104_SEL => ua_mux104_sel, 
      CTRLOUT_UA_MUX105_SEL => ua_mux105_sel, 
      CTRLOUT_UA_MUX106_SEL => ua_mux106_sel, 
      CTRLOUT_UA_MUX107_SEL => ua_mux107_sel, 
      CTRLOUT_UA_MUX108_SEL => ua_mux108_sel, 
      CTRLOUT_UA_MUX109_SEL => ua_mux109_sel, 
      CTRLOUT_UA_MUX110_SEL => ua_mux110_sel, 
      CTRLOUT_UA_PREG00_ENB => ua_preg00_enb, 
      CTRLOUT_UA_PREG01_ENB => ua_preg01_enb, 
      CTRLOUT_UA_PREG02_ENB => ua_preg02_enb, 
      CTRLOUT_UA_PREG03_ENB => ua_preg03_enb, 
      CTRLOUT_UA_PREG04_ENB => ua_preg04_enb, 
      CTRLOUT_UA_PREG05_ENB => ua_preg05_enb, 
      CTRLOUT_UA_PREG06_ENB => ua_preg06_enb, 
      CTRLOUT_UA_PREG07_ENB => ua_preg07_enb, 
      CTRLOUT_UA_PREG08_ENB => ua_preg08_enb, 
      CTRLOUT_UA_PREG09_ENB => ua_preg09_enb, 
      CTRLOUT_UA_PREG10_ENB => ua_preg10_enb, 
      CTRLOUT_UA_PREG11_ENB => ua_preg11_enb, 
      CTRLOUT_UA_PREG12_ENB => ua_preg12_enb, 
      CTRLOUT_UA_PREG13_ENB => ua_preg13_enb, 
      CTRLOUT_UA_PREG14_ENB => ua_preg14_enb, 
      CTRLOUT_UA_PREG15_ENB => ua_preg15_enb, 
      CTRLOUT_UA_PREG16_ENB => ua_preg16_enb, 
      CTRLOUT_UA_PREG17_ENB => ua_preg17_enb, 
      CTRLOUT_UA_PREG18_ENB => ua_preg18_enb, 
      CTRLOUT_UA_PREG19_ENB => ua_preg19_enb, 
      CTRLOUT_UA_PREG20_ENB => ua_preg20_enb, 
      CTRLOUT_UA_PREG21_ENB => ua_preg21_enb, 
      CTRLOUT_UA_PREG22_ENB => ua_preg22_enb, 
      CTRLOUT_UA_PREG23_ENB => ua_preg23_enb, 
      CTRLOUT_UA_PREG24_ENB => ua_preg24_enb, 
      CTRLOUT_UA_PREG25_ENB => ua_preg25_enb, 
      CTRLOUT_UA_PREG26_ENB => ua_preg26_enb, 
      CTRLOUT_UA_PREG27_ENB => ua_preg27_enb, 
      CTRLOUT_UA_PREG28_ENB => ua_preg28_enb, 
      CTRLOUT_UA_PREG29_ENB => ua_preg29_enb, 
      CTRLOUT_UA_PREG30_ENB => ua_preg30_enb, 
      CTRLOUT_UA_PREG31_ENB => ua_preg31_enb, 
      CTRLOUT_UA_PREG32_ENB => ua_preg32_enb, 
      CTRLOUT_UA_PREG33_ENB => ua_preg33_enb, 
      CTRLOUT_UA_PREG34_ENB => ua_preg34_enb, 
      CTRLOUT_UA_PREG35_ENB => ua_preg35_enb, 
      CTRLOUT_UA_PREG36_ENB => ua_preg36_enb, 
      CTRLOUT_UA_PREG37_ENB => ua_preg37_enb, 
      CTRLOUT_UA_PREG38_ENB => ua_preg38_enb, 
      CTRLOUT_UA_PREG39_ENB => ua_preg39_enb, 
      CTRLOUT_UA_PREG40_ENB => ua_preg40_enb, 
      CTRLOUT_UA_PREG41_ENB => ua_preg41_enb, 
      CTRLOUT_UA_PREG42_ENB => ua_preg42_enb, 
      CTRLOUT_UA_PREG43_ENB => ua_preg43_enb, 
      CTRLOUT_UA_PREG44_ENB => ua_preg44_enb, 
      CTRLOUT_UA_PREG45_ENB => ua_preg45_enb, 
      CTRLOUT_UA_PREG46_ENB => ua_preg46_enb, 
      CTRLOUT_UA_PREG47_ENB => ua_preg47_enb, 
      CTRLOUT_UA_PREG48_ENB => ua_preg48_enb, 
      CTRLOUT_UA_PREG49_ENB => ua_preg49_enb, 
      CTRLOUT_UA_PREG50_ENB => ua_preg50_enb, 
      CTRLOUT_UA_PREG51_ENB => ua_preg51_enb, 
      CTRLOUT_UA_PREG52_ENB => ua_preg52_enb, 
      CTRLOUT_UA_PREG53_ENB => ua_preg53_enb, 
      CTRLOUT_UA_PREG54_ENB => ua_preg54_enb, 
      CTRLOUT_UA_PREG55_ENB => ua_preg55_enb, 
      CTRLOUT_UA_PREG56_ENB => ua_preg56_enb, 
      CTRLOUT_UA_PREG57_ENB => ua_preg57_enb, 
      CTRLOUT_UA_PREG58_ENB => ua_preg58_enb, 
      CTRLOUT_UA_PREG59_ENB => ua_preg59_enb, 
      CTRLOUT_UA_PREG60_ENB => ua_preg60_enb, 
      CTRLOUT_UA_PREG61_ENB => ua_preg61_enb, 
      CTRLOUT_UA_PREG62_ENB => ua_preg62_enb, 
      CTRLOUT_UA_PREG63_ENB => ua_preg63_enb, 
      CTRLOUT_UA_PREG64_ENB => ua_preg64_enb, 
      CTRLOUT_UA_PREG65_ENB => ua_preg65_enb, 
      CTRLOUT_UA_PREG66_ENB => ua_preg66_enb, 
      CTRLOUT_UA_PREG67_ENB => ua_preg67_enb, 
      CTRLOUT_UA_PREG68_ENB => ua_preg68_enb, 
      CTRLOUT_UA_PREG69_ENB => ua_preg69_enb, 
      CTRLOUT_UA_PREG70_ENB => ua_preg70_enb, 
      CTRLOUT_UA_PREG71_ENB => ua_preg71_enb, 
      CTRLOUT_UA_PREG72_ENB => ua_preg72_enb, 
      CTRLOUT_UA_PREG73_ENB => ua_preg73_enb, 
      CTRLOUT_UA_PREG74_ENB => ua_preg74_enb, 
      CTRLOUT_UA_PREG75_ENB => ua_preg75_enb, 
      CTRLOUT_UA_PREG76_ENB => ua_preg76_enb, 
      CTRLOUT_UA_PREG77_ENB => ua_preg77_enb, 
      CTRLOUT_UA_PREG78_ENB => ua_preg78_enb, 
      CTRLOUT_UA_PREG79_ENB => ua_preg79_enb, 
      CTRLOUT_UA_PREG80_ENB => ua_preg80_enb, 
      CTRLOUT_UA_PREG81_ENB => ua_preg81_enb, 
      CTRLOUT_UA_PREG82_ENB => ua_preg82_enb, 
      CTRLOUT_UA_PREG83_ENB => ua_preg83_enb, 
      CTRLOUT_UA_PREG84_ENB => ua_preg84_enb, 
      CTRLOUT_UA_PREG85_ENB => ua_preg85_enb, 
      CTRLOUT_UA_PREG86_ENB => ua_preg86_enb, 
      CTRLOUT_UA_PREG87_ENB => ua_preg87_enb, 
      CTRLOUT_UA_PREG88_ENB => ua_preg88_enb, 
      CTRLOUT_UA_PREG89_ENB => ua_preg89_enb, 
      CTRLOUT_UA_PREG90_ENB => ua_preg90_enb, 
      CTRLOUT_UA_PREG91_ENB => ua_preg91_enb, 
      CTRLOUT_UA_PREG92_ENB => ua_preg92_enb, 
      CTRLOUT_UA_PREG93_ENB => ua_preg93_enb, 
      CTRLOUT_UA_PREG94_ENB => ua_preg94_enb, 
      CTRLOUT_UA_PREG95_ENB => ua_preg95_enb, 
      CTRLOUT_UA_PREG96_ENB => ua_preg96_enb, 
      CTRLOUT_UA_PREG97_ENB => ua_preg97_enb, 
      CTRLOUT_UA_PREG98_ENB => ua_preg98_enb, 
      CTRLOUT_UA_PREG99_ENB => ua_preg99_enb, 
      CTRLOUT_UA_PREG100_ENB => ua_preg100_enb, 
      CTRLOUT_UA_PREG101_ENB => ua_preg101_enb, 
      CTRLOUT_UA_PREG102_ENB => ua_preg102_enb, 
      CTRLOUT_UA_PREG103_ENB => ua_preg103_enb, 
      CTRLOUT_UA_PREG104_ENB => ua_preg104_enb, 
      CTRLOUT_UA_PREG105_ENB => ua_preg105_enb, 
      CTRLOUT_UA_PREG106_ENB => ua_preg106_enb, 
      CTRLOUT_UA_PREG107_ENB => ua_preg107_enb, 
      CTRLOUT_UA_PREG108_ENB => ua_preg108_enb, 
      CTRLOUT_UA_PREG109_ENB => ua_preg109_enb, 
      CTRLOUT_UA_PREG110_ENB => ua_preg110_enb, 
      CTRLOUT_UA_PREG111_ENB => ua_preg111_enb, 
      CTRLOUT_UA_PREG112_ENB => ua_preg112_enb, 
      CTRLOUT_UA_PREG113_ENB => ua_preg113_enb, 
      CTRLOUT_UA_PREG114_ENB => ua_preg114_enb, 
      CTRLOUT_UA_PREG115_ENB => ua_preg115_enb, 
      CTRLOUT_UA_PREG116_ENB => ua_preg116_enb, 
      CTRLOUT_UA_PREG117_ENB => ua_preg117_enb, 
      CTRLOUT_UA_PREG118_ENB => ua_preg118_enb, 
      CTRLOUT_UA_PREG119_ENB => ua_preg119_enb, 
      CTRLOUT_UA_PREG120_ENB => ua_preg120_enb
    );

  UA_MUX00 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux00_sel, 
      DIN0 => uf_fwul0_data_out, 
      DIN1 => uf_fwu0_data_out, 
      DOUT => ua_mux00_dout
    );

  UA_MUX01 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux01_sel, 
      DIN0 => uf_ext1_data_out, 
      DIN1 => uf_fwul1_data_out, 
      DIN2 => uf_fwul2_data_out, 
      DOUT => ua_mux01_dout
    );

  UA_MUX02 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux02_sel, 
      DIN0 => bitrange63to32_00, 
      DIN1 => uf_div1_r, 
      DIN2 => ua_preg05_dout, 
      DOUT => ua_mux02_dout
    );

  UA_MUX03 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux03_sel, 
      DIN0 => bitrange31to0_00, 
      DIN1 => uf_div1_q, 
      DIN2 => ua_preg05_dout, 
      DOUT => ua_mux03_dout
    );

  UA_MUX04 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux04_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg31_dout, 
      DOUT => ua_mux04_dout
    );

  UA_MUX05 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux05_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux05_dout
    );

  UA_MUX06 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux06_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg34_dout, 
      DOUT => ua_mux06_dout
    );

  UA_MUX07 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux07_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg35_dout, 
      DOUT => ua_mux07_dout
    );

  UA_MUX08 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux08_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux08_dout
    );

  UA_MUX09 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux09_sel, 
      DIN0 => bitrange28to24_00, 
      DIN1 => bitrange20to16_00, 
      DOUT => ua_mux09_dout
    );

  UA_MUX10 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux10_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h00, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux10_dout
    );

  UA_MUX11 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux11_sel, 
      DIN0 => concat_11, 
      DIN1 => bitrange12to8_00, 
      DOUT => ua_mux11_dout
    );

  UA_MUX12 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux12_sel, 
      DIN0 => concat_03, 
      DIN1 => ua_preg00_dout, 
      DOUT => ua_mux12_dout
    );

  UA_MUX13 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux13_sel, 
      DIN0 => concat_16, 
      DIN1 => ua_preg36_dout, 
      DOUT => ua_mux13_dout
    );

  UA_MUX14 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux14_sel, 
      DIN0 => uf_adder2_result, 
      DIN1 => ua_preg00_dout, 
      DOUT => ua_mux14_dout
    );

  UA_MUX15 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux15_sel, 
      DIN0 => uf_adder2_result, 
      DIN1 => ua_preg04_dout, 
      DOUT => ua_mux15_dout
    );

  UA_MUX16 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux16_sel, 
      DIN0 => ua_preg38_dout, 
      DIN1 => ua_mux12_dout, 
      DIN2 => ua_mux13_dout, 
      DOUT => ua_mux16_dout
    );

  UA_MUX17 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux17_sel, 
      DIN0 => concat_10, 
      DIN1 => concat_17, 
      DIN2 => ua_preg08_dout, 
      DOUT => ua_mux17_dout
    );

  UA_MUX18 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux18_sel, 
      DIN0 => concat_12, 
      DIN1 => concat_21, 
      DIN2 => ua_preg09_dout, 
      DOUT => ua_mux18_dout
    );

  UA_MUX19 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux19_sel, 
      DIN0 => ua_mux18_dout, 
      DIN1 => ua_mux17_dout, 
      DOUT => ua_mux19_dout
    );

  UA_MUX20 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux20_sel, 
      DIN0 => ua_preg02_dout, 
      DIN1 => const_32h00000060, 
      DIN2 => const_32h00000030, 
      DIN3 => ua_preg39_dout, 
      DOUT => ua_mux20_dout
    );

  UA_MUX21 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux21_sel, 
      DIN0 => concat_22, 
      DIN1 => uf_fwul0_data_out, 
      DIN2 => uf_sysreg_data_out, 
      DOUT => ua_mux21_dout
    );

  UA_MUX22 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux22_sel, 
      DIN0 => uf_fwul0_data_out, 
      DIN1 => uf_fwul1_data_out, 
      DOUT => ua_mux22_dout
    );

  UA_MUX23 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux23_sel, 
      DIN0 => bitrange4to0_00, 
      DIN1 => bitrange4to0_01, 
      DOUT => ua_mux23_dout
    );

  UA_MUX24 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux24_sel, 
      DIN0 => ua_preg00_dout, 
      DIN1 => uf_alu1_result, 
      DOUT => ua_mux24_dout
    );

  UA_MUX25 : rtg_mux2to1_w32
    port map (
      SEL => ua_mux25_sel, 
      DIN0 => const_32h00000004, 
      DIN1 => const_32h00000004, 
      DOUT => ua_mux25_dout
    );

  UA_MUX26 : rtg_mux2to1_w1
    port map (
      SEL => ua_mux26_sel, 
      DIN0 => const_b0, 
      DIN1 => const_b1, 
      DOUT => ua_mux26_dout
    );

  UA_MUX27 : rtg_mux2to1_w1
    port map (
      SEL => ua_mux27_sel, 
      DIN0 => ua_mux26_dout, 
      DIN1 => const_b1, 
      DOUT => ua_mux27_dout
    );

  UA_MUX28 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux28_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg41_dout, 
      DOUT => ua_mux28_dout
    );

  UA_MUX29 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux29_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux29_dout
    );

  UA_MUX30 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux30_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg42_dout, 
      DOUT => ua_mux30_dout
    );

  UA_MUX31 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux31_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg43_dout, 
      DOUT => ua_mux31_dout
    );

  UA_MUX32 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux32_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux32_dout
    );

  UA_MUX33 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux33_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg45_dout, 
      DOUT => ua_mux33_dout
    );

  UA_MUX34 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux34_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg46_dout, 
      DOUT => ua_mux34_dout
    );

  UA_MUX35 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux35_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux35_dout
    );

  UA_MUX36 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux36_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg49_dout, 
      DOUT => ua_mux36_dout
    );

  UA_MUX37 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux37_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg50_dout, 
      DOUT => ua_mux37_dout
    );

  UA_MUX38 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux38_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux38_dout
    );

  UA_MUX39 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux39_sel, 
      DIN0 => bitrange28to24_00, 
      DIN1 => bitrange20to16_00, 
      DOUT => ua_mux39_dout
    );

  UA_MUX40 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux40_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg51_dout, 
      DOUT => ua_mux40_dout
    );

  UA_MUX41 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux41_sel, 
      DIN0 => const_5h1f, 
      DIN1 => bitrange12to8_00, 
      DIN2 => bitrange20to16_00, 
      DOUT => ua_mux41_dout
    );

  UA_MUX42 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux42_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg53_dout, 
      DOUT => ua_mux42_dout
    );

  UA_MUX43 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux43_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux43_dout
    );

  UA_MUX44 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux44_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg56_dout, 
      DOUT => ua_mux44_dout
    );

  UA_MUX45 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux45_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux45_dout
    );

  UA_MUX46 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux46_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg60_dout, 
      DOUT => ua_mux46_dout
    );

  UA_MUX47 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux47_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux47_dout
    );

  UA_MUX48 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux48_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg61_dout, 
      DOUT => ua_mux48_dout
    );

  UA_MUX49 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux49_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux49_dout
    );

  UA_MUX50 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux50_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg62_dout, 
      DOUT => ua_mux50_dout
    );

  UA_MUX51 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux51_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg63_dout, 
      DOUT => ua_mux51_dout
    );

  UA_MUX52 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux52_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux52_dout
    );

  UA_MUX53 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux53_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg65_dout, 
      DOUT => ua_mux53_dout
    );

  UA_MUX54 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux54_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg66_dout, 
      DOUT => ua_mux54_dout
    );

  UA_MUX55 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux55_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux55_dout
    );

  UA_MUX56 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux56_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg69_dout, 
      DOUT => ua_mux56_dout
    );

  UA_MUX57 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux57_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg70_dout, 
      DOUT => ua_mux57_dout
    );

  UA_MUX58 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux58_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux58_dout
    );

  UA_MUX59 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux59_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h00, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux59_dout
    );

  UA_MUX60 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux60_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg71_dout, 
      DOUT => ua_mux60_dout
    );

  UA_MUX61 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux61_sel, 
      DIN0 => const_5h1f, 
      DIN1 => bitrange12to8_00, 
      DIN2 => bitrange20to16_00, 
      DOUT => ua_mux61_dout
    );

  UA_MUX62 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux62_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg73_dout, 
      DOUT => ua_mux62_dout
    );

  UA_MUX63 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux63_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux63_dout
    );

  UA_MUX64 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux64_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg76_dout, 
      DOUT => ua_mux64_dout
    );

  UA_MUX65 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux65_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux65_dout
    );

  UA_MUX66 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux66_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg80_dout, 
      DOUT => ua_mux66_dout
    );

  UA_MUX67 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux67_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux67_dout
    );

  UA_MUX68 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux68_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg81_dout, 
      DOUT => ua_mux68_dout
    );

  UA_MUX69 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux69_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux69_dout
    );

  UA_MUX70 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux70_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg82_dout, 
      DOUT => ua_mux70_dout
    );

  UA_MUX71 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux71_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg83_dout, 
      DOUT => ua_mux71_dout
    );

  UA_MUX72 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux72_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux72_dout
    );

  UA_MUX73 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux73_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg85_dout, 
      DOUT => ua_mux73_dout
    );

  UA_MUX74 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux74_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg86_dout, 
      DOUT => ua_mux74_dout
    );

  UA_MUX75 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux75_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux75_dout
    );

  UA_MUX76 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux76_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg89_dout, 
      DOUT => ua_mux76_dout
    );

  UA_MUX77 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux77_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg90_dout, 
      DOUT => ua_mux77_dout
    );

  UA_MUX78 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux78_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux78_dout
    );

  UA_MUX79 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux79_sel, 
      DIN0 => concat_11, 
      DIN1 => bitrange12to8_00, 
      DOUT => ua_mux79_dout
    );

  UA_MUX80 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux80_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg91_dout, 
      DOUT => ua_mux80_dout
    );

  UA_MUX81 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux81_sel, 
      DIN0 => const_5h1f, 
      DIN1 => bitrange12to8_00, 
      DIN2 => bitrange20to16_00, 
      DOUT => ua_mux81_dout
    );

  UA_MUX82 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux82_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg93_dout, 
      DOUT => ua_mux82_dout
    );

  UA_MUX83 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux83_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux83_dout
    );

  UA_MUX84 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux84_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg96_dout, 
      DOUT => ua_mux84_dout
    );

  UA_MUX85 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux85_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux85_dout
    );

  UA_MUX86 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux86_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg100_dout, 
      DOUT => ua_mux86_dout
    );

  UA_MUX87 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux87_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux87_dout
    );

  UA_MUX88 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux88_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg101_dout, 
      DOUT => ua_mux88_dout
    );

  UA_MUX89 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux89_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux89_dout
    );

  UA_MUX90 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux90_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg102_dout, 
      DOUT => ua_mux90_dout
    );

  UA_MUX91 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux91_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg103_dout, 
      DOUT => ua_mux91_dout
    );

  UA_MUX92 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux92_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux92_dout
    );

  UA_MUX93 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux93_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg105_dout, 
      DOUT => ua_mux93_dout
    );

  UA_MUX94 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux94_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg106_dout, 
      DOUT => ua_mux94_dout
    );

  UA_MUX95 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux95_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux95_dout
    );

  UA_MUX96 : rtg_mux3to1_w32
    port map (
      SEL => ua_mux96_sel, 
      DIN0 => concat_00, 
      DIN1 => uf_muxw32p4_data_out, 
      DIN2 => ua_preg109_dout, 
      DOUT => ua_mux96_dout
    );

  UA_MUX97 : rtg_mux5to1_w32
    port map (
      SEL => ua_mux97_sel, 
      DIN0 => uf_alu1_result, 
      DIN1 => uf_sft1_data_out, 
      DIN2 => concat_25, 
      DIN3 => concat_26, 
      DIN4 => ua_preg110_dout, 
      DOUT => ua_mux97_dout
    );

  UA_MUX98 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux98_sel, 
      DIN0 => uf_cpc_data_out, 
      DIN1 => uf_hi_data_out, 
      DIN2 => uf_lo_data_out, 
      DIN3 => concat_27, 
      DOUT => ua_mux98_dout
    );

  UA_MUX99 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux99_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg111_dout, 
      DOUT => ua_mux99_dout
    );

  UA_MUX100 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux100_sel, 
      DIN0 => const_5h1f, 
      DIN1 => bitrange12to8_00, 
      DIN2 => bitrange20to16_00, 
      DOUT => ua_mux100_dout
    );

  UA_MUX101 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux101_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg113_dout, 
      DOUT => ua_mux101_dout
    );

  UA_MUX102 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux102_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux102_dout
    );

  UA_MUX103 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux103_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg116_dout, 
      DOUT => ua_mux103_dout
    );

  UA_MUX104 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux104_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux104_dout
    );

  UA_MUX105 : rtg_mux2to1_w5
    port map (
      SEL => ua_mux105_sel, 
      DIN0 => const_5h1f, 
      DIN1 => ua_preg120_dout, 
      DOUT => ua_mux105_dout
    );

  UA_MUX106 : rtg_mux3to1_w5
    port map (
      SEL => ua_mux106_sel, 
      DIN0 => bitrange20to16_00, 
      DIN1 => const_5h1f, 
      DIN2 => bitrange12to8_00, 
      DOUT => ua_mux106_dout
    );

  UA_MUX107 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux107_sel, 
      DIN0 => concat_06, 
      DIN1 => concat_00, 
      DIN2 => concat_15, 
      DIN3 => ua_preg07_dout, 
      DOUT => ua_mux107_dout
    );

  UA_MUX108 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux108_sel, 
      DIN0 => concat_05, 
      DIN1 => concat_09, 
      DIN2 => concat_14, 
      DIN3 => concat_20, 
      DOUT => ua_mux108_dout
    );

  UA_MUX109 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux109_sel, 
      DIN0 => concat_04, 
      DIN1 => concat_08, 
      DIN2 => concat_13, 
      DIN3 => concat_19, 
      DOUT => ua_mux109_dout
    );

  UA_MUX110 : rtg_mux4to1_w32
    port map (
      SEL => ua_mux110_sel, 
      DIN0 => concat_00, 
      DIN1 => concat_07, 
      DIN2 => concat_18, 
      DIN3 => ua_preg07_dout, 
      DOUT => ua_mux110_dout
    );

  UA_PREG00 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg00_enb, 
      DIN => uf_alu1_result, 
      DOUT => ua_preg00_dout
    );

  UA_PREG01 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg01_enb, 
      DIN => ua_preg00_dout, 
      DOUT => ua_preg01_dout
    );

  UA_PREG02 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg02_enb, 
      DIN => uf_add1_result, 
      DOUT => ua_preg02_dout
    );

  UA_PREG03 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg03_enb, 
      DIN => uf_cpc_data_out, 
      DOUT => ua_preg03_dout
    );

  UA_PREG04 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg04_enb, 
      DIN => uf_adder2_result, 
      DOUT => ua_preg04_dout
    );

  UA_PREG05 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg05_enb, 
      DIN => uf_fwul0_data_out, 
      DOUT => ua_preg05_dout
    );

  UA_PREG06 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg06_enb, 
      DIN => uf_fwul1_data_out, 
      DOUT => ua_preg06_dout
    );

  UA_PREG07 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg07_enb, 
      DIN => ua_preg06_dout, 
      DOUT => ua_preg07_dout
    );

  UA_PREG08 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg08_enb, 
      DIN => ua_preg07_dout, 
      DOUT => ua_preg08_dout
    );

  UA_PREG09 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg09_enb, 
      DIN => ua_preg08_dout, 
      DOUT => ua_preg09_dout
    );

  UA_PREG10 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg10_enb, 
      DIN => uf_fwul2_data_out, 
      DOUT => ua_preg10_dout
    );

  UA_PREG11 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg11_enb, 
      DIN => ua_preg10_dout, 
      DOUT => ua_preg11_dout
    );

  UA_PREG12 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg12_enb, 
      DIN => ua_preg11_dout, 
      DOUT => ua_preg12_dout
    );

  UA_PREG13 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg13_enb, 
      DIN => ua_preg12_dout, 
      DOUT => ua_preg13_dout
    );

  UA_PREG14 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg14_enb, 
      DIN => uf_fwul3_data_out, 
      DOUT => ua_preg14_dout
    );

  UA_PREG15 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg15_enb, 
      DIN => ua_preg14_dout, 
      DOUT => ua_preg15_dout
    );

  UA_PREG16 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg16_enb, 
      DIN => ua_preg15_dout, 
      DOUT => ua_preg16_dout
    );

  UA_PREG17 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg17_enb, 
      DIN => ua_preg16_dout, 
      DOUT => ua_preg17_dout
    );

  UA_PREG18 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg18_enb, 
      DIN => uf_muxw32p4_data_out, 
      DOUT => ua_preg18_dout
    );

  UA_PREG19 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg19_enb, 
      DIN => bitrange20to16_00, 
      DOUT => ua_preg19_dout
    );

  UA_PREG20 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg20_enb, 
      DIN => ua_preg19_dout, 
      DOUT => ua_preg20_dout
    );

  UA_PREG21 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg21_enb, 
      DIN => concat_01, 
      DOUT => ua_preg21_dout
    );

  UA_PREG22 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg22_enb, 
      DIN => concat_02, 
      DOUT => ua_preg22_dout
    );

  UA_PREG23 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg23_enb, 
      DIN => ua_preg22_dout, 
      DOUT => ua_preg23_dout
    );

  UA_PREG24 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg24_enb, 
      DIN => ua_preg23_dout, 
      DOUT => ua_preg24_dout
    );

  UA_PREG25 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg25_enb, 
      DIN => concat_24, 
      DOUT => ua_preg25_dout
    );

  UA_PREG26 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg26_enb, 
      DIN => ua_mux00_dout, 
      DOUT => ua_preg26_dout
    );

  UA_PREG27 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg27_enb, 
      DIN => ua_mux01_dout, 
      DOUT => ua_preg27_dout
    );

  UA_PREG28 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg28_enb, 
      DIN => ua_mux04_dout, 
      DOUT => ua_preg28_dout
    );

  UA_PREG29 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg29_enb, 
      DIN => ua_preg28_dout, 
      DOUT => ua_preg29_dout
    );

  UA_PREG30 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg30_enb, 
      DIN => ua_preg29_dout, 
      DOUT => ua_preg30_dout
    );

  UA_PREG31 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg31_enb, 
      DIN => ua_mux05_dout, 
      DOUT => ua_preg31_dout
    );

  UA_PREG32 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg32_enb, 
      DIN => ua_mux06_dout, 
      DOUT => ua_preg32_dout
    );

  UA_PREG33 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg33_enb, 
      DIN => ua_preg32_dout, 
      DOUT => ua_preg33_dout
    );

  UA_PREG34 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg34_enb, 
      DIN => ua_mux07_dout, 
      DOUT => ua_preg34_dout
    );

  UA_PREG35 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg35_enb, 
      DIN => ua_mux08_dout, 
      DOUT => ua_preg35_dout
    );

  UA_PREG36 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg36_enb, 
      DIN => ua_mux14_dout, 
      DOUT => ua_preg36_dout
    );

  UA_PREG37 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg37_enb, 
      DIN => ua_mux15_dout, 
      DOUT => ua_preg37_dout
    );

  UA_PREG38 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg38_enb, 
      DIN => ua_preg37_dout, 
      DOUT => ua_preg38_dout
    );

  UA_PREG39 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg39_enb, 
      DIN => ua_mux21_dout, 
      DOUT => ua_preg39_dout
    );

  UA_PREG40 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg40_enb, 
      DIN => ua_mux22_dout, 
      DOUT => ua_preg40_dout
    );

  UA_PREG41 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg41_enb, 
      DIN => ua_mux29_dout, 
      DOUT => ua_preg41_dout
    );

  UA_PREG42 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg42_enb, 
      DIN => ua_mux31_dout, 
      DOUT => ua_preg42_dout
    );

  UA_PREG43 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg43_enb, 
      DIN => ua_mux32_dout, 
      DOUT => ua_preg43_dout
    );

  UA_PREG44 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg44_enb, 
      DIN => ua_mux33_dout, 
      DOUT => ua_preg44_dout
    );

  UA_PREG45 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg45_enb, 
      DIN => ua_mux34_dout, 
      DOUT => ua_preg45_dout
    );

  UA_PREG46 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg46_enb, 
      DIN => ua_mux35_dout, 
      DOUT => ua_preg46_dout
    );

  UA_PREG47 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg47_enb, 
      DIN => ua_mux36_dout, 
      DOUT => ua_preg47_dout
    );

  UA_PREG48 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg48_enb, 
      DIN => ua_preg47_dout, 
      DOUT => ua_preg48_dout
    );

  UA_PREG49 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg49_enb, 
      DIN => ua_mux37_dout, 
      DOUT => ua_preg49_dout
    );

  UA_PREG50 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg50_enb, 
      DIN => ua_mux38_dout, 
      DOUT => ua_preg50_dout
    );

  UA_PREG51 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg51_enb, 
      DIN => ua_mux41_dout, 
      DOUT => ua_preg51_dout
    );

  UA_PREG52 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg52_enb, 
      DIN => ua_mux42_dout, 
      DOUT => ua_preg52_dout
    );

  UA_PREG53 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg53_enb, 
      DIN => ua_mux43_dout, 
      DOUT => ua_preg53_dout
    );

  UA_PREG54 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg54_enb, 
      DIN => ua_mux44_dout, 
      DOUT => ua_preg54_dout
    );

  UA_PREG55 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg55_enb, 
      DIN => ua_preg54_dout, 
      DOUT => ua_preg55_dout
    );

  UA_PREG56 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg56_enb, 
      DIN => ua_mux45_dout, 
      DOUT => ua_preg56_dout
    );

  UA_PREG57 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg57_enb, 
      DIN => ua_mux46_dout, 
      DOUT => ua_preg57_dout
    );

  UA_PREG58 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg58_enb, 
      DIN => ua_preg57_dout, 
      DOUT => ua_preg58_dout
    );

  UA_PREG59 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg59_enb, 
      DIN => ua_preg58_dout, 
      DOUT => ua_preg59_dout
    );

  UA_PREG60 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg60_enb, 
      DIN => ua_mux47_dout, 
      DOUT => ua_preg60_dout
    );

  UA_PREG61 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg61_enb, 
      DIN => ua_mux49_dout, 
      DOUT => ua_preg61_dout
    );

  UA_PREG62 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg62_enb, 
      DIN => ua_mux51_dout, 
      DOUT => ua_preg62_dout
    );

  UA_PREG63 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg63_enb, 
      DIN => ua_mux52_dout, 
      DOUT => ua_preg63_dout
    );

  UA_PREG64 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg64_enb, 
      DIN => ua_mux53_dout, 
      DOUT => ua_preg64_dout
    );

  UA_PREG65 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg65_enb, 
      DIN => ua_mux54_dout, 
      DOUT => ua_preg65_dout
    );

  UA_PREG66 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg66_enb, 
      DIN => ua_mux55_dout, 
      DOUT => ua_preg66_dout
    );

  UA_PREG67 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg67_enb, 
      DIN => ua_mux56_dout, 
      DOUT => ua_preg67_dout
    );

  UA_PREG68 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg68_enb, 
      DIN => ua_preg67_dout, 
      DOUT => ua_preg68_dout
    );

  UA_PREG69 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg69_enb, 
      DIN => ua_mux57_dout, 
      DOUT => ua_preg69_dout
    );

  UA_PREG70 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg70_enb, 
      DIN => ua_mux58_dout, 
      DOUT => ua_preg70_dout
    );

  UA_PREG71 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg71_enb, 
      DIN => ua_mux61_dout, 
      DOUT => ua_preg71_dout
    );

  UA_PREG72 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg72_enb, 
      DIN => ua_mux62_dout, 
      DOUT => ua_preg72_dout
    );

  UA_PREG73 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg73_enb, 
      DIN => ua_mux63_dout, 
      DOUT => ua_preg73_dout
    );

  UA_PREG74 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg74_enb, 
      DIN => ua_mux64_dout, 
      DOUT => ua_preg74_dout
    );

  UA_PREG75 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg75_enb, 
      DIN => ua_preg74_dout, 
      DOUT => ua_preg75_dout
    );

  UA_PREG76 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg76_enb, 
      DIN => ua_mux65_dout, 
      DOUT => ua_preg76_dout
    );

  UA_PREG77 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg77_enb, 
      DIN => ua_mux66_dout, 
      DOUT => ua_preg77_dout
    );

  UA_PREG78 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg78_enb, 
      DIN => ua_preg77_dout, 
      DOUT => ua_preg78_dout
    );

  UA_PREG79 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg79_enb, 
      DIN => ua_preg78_dout, 
      DOUT => ua_preg79_dout
    );

  UA_PREG80 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg80_enb, 
      DIN => ua_mux67_dout, 
      DOUT => ua_preg80_dout
    );

  UA_PREG81 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg81_enb, 
      DIN => ua_mux69_dout, 
      DOUT => ua_preg81_dout
    );

  UA_PREG82 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg82_enb, 
      DIN => ua_mux71_dout, 
      DOUT => ua_preg82_dout
    );

  UA_PREG83 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg83_enb, 
      DIN => ua_mux72_dout, 
      DOUT => ua_preg83_dout
    );

  UA_PREG84 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg84_enb, 
      DIN => ua_mux73_dout, 
      DOUT => ua_preg84_dout
    );

  UA_PREG85 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg85_enb, 
      DIN => ua_mux74_dout, 
      DOUT => ua_preg85_dout
    );

  UA_PREG86 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg86_enb, 
      DIN => ua_mux75_dout, 
      DOUT => ua_preg86_dout
    );

  UA_PREG87 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg87_enb, 
      DIN => ua_mux76_dout, 
      DOUT => ua_preg87_dout
    );

  UA_PREG88 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg88_enb, 
      DIN => ua_preg87_dout, 
      DOUT => ua_preg88_dout
    );

  UA_PREG89 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg89_enb, 
      DIN => ua_mux77_dout, 
      DOUT => ua_preg89_dout
    );

  UA_PREG90 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg90_enb, 
      DIN => ua_mux78_dout, 
      DOUT => ua_preg90_dout
    );

  UA_PREG91 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg91_enb, 
      DIN => ua_mux81_dout, 
      DOUT => ua_preg91_dout
    );

  UA_PREG92 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg92_enb, 
      DIN => ua_mux82_dout, 
      DOUT => ua_preg92_dout
    );

  UA_PREG93 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg93_enb, 
      DIN => ua_mux83_dout, 
      DOUT => ua_preg93_dout
    );

  UA_PREG94 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg94_enb, 
      DIN => ua_mux84_dout, 
      DOUT => ua_preg94_dout
    );

  UA_PREG95 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg95_enb, 
      DIN => ua_preg94_dout, 
      DOUT => ua_preg95_dout
    );

  UA_PREG96 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg96_enb, 
      DIN => ua_mux85_dout, 
      DOUT => ua_preg96_dout
    );

  UA_PREG97 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg97_enb, 
      DIN => ua_mux86_dout, 
      DOUT => ua_preg97_dout
    );

  UA_PREG98 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg98_enb, 
      DIN => ua_preg97_dout, 
      DOUT => ua_preg98_dout
    );

  UA_PREG99 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg99_enb, 
      DIN => ua_preg98_dout, 
      DOUT => ua_preg99_dout
    );

  UA_PREG100 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg100_enb, 
      DIN => ua_mux87_dout, 
      DOUT => ua_preg100_dout
    );

  UA_PREG101 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg101_enb, 
      DIN => ua_mux89_dout, 
      DOUT => ua_preg101_dout
    );

  UA_PREG102 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg102_enb, 
      DIN => ua_mux91_dout, 
      DOUT => ua_preg102_dout
    );

  UA_PREG103 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg103_enb, 
      DIN => ua_mux92_dout, 
      DOUT => ua_preg103_dout
    );

  UA_PREG104 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg104_enb, 
      DIN => ua_mux93_dout, 
      DOUT => ua_preg104_dout
    );

  UA_PREG105 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg105_enb, 
      DIN => ua_mux94_dout, 
      DOUT => ua_preg105_dout
    );

  UA_PREG106 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg106_enb, 
      DIN => ua_mux95_dout, 
      DOUT => ua_preg106_dout
    );

  UA_PREG107 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg107_enb, 
      DIN => ua_mux96_dout, 
      DOUT => ua_preg107_dout
    );

  UA_PREG108 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg108_enb, 
      DIN => ua_preg107_dout, 
      DOUT => ua_preg108_dout
    );

  UA_PREG109 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg109_enb, 
      DIN => ua_mux97_dout, 
      DOUT => ua_preg109_dout
    );

  UA_PREG110 : rtg_register_w32
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg110_enb, 
      DIN => ua_mux98_dout, 
      DOUT => ua_preg110_dout
    );

  UA_PREG111 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg111_enb, 
      DIN => ua_mux100_dout, 
      DOUT => ua_preg111_dout
    );

  UA_PREG112 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg112_enb, 
      DIN => ua_mux101_dout, 
      DOUT => ua_preg112_dout
    );

  UA_PREG113 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg113_enb, 
      DIN => ua_mux102_dout, 
      DOUT => ua_preg113_dout
    );

  UA_PREG114 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg114_enb, 
      DIN => ua_mux103_dout, 
      DOUT => ua_preg114_dout
    );

  UA_PREG115 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg115_enb, 
      DIN => ua_preg114_dout, 
      DOUT => ua_preg115_dout
    );

  UA_PREG116 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg116_enb, 
      DIN => ua_mux104_dout, 
      DOUT => ua_preg116_dout
    );

  UA_PREG117 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg117_enb, 
      DIN => ua_mux105_dout, 
      DOUT => ua_preg117_dout
    );

  UA_PREG118 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg118_enb, 
      DIN => ua_preg117_dout, 
      DOUT => ua_preg118_dout
    );

  UA_PREG119 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg119_enb, 
      DIN => ua_preg118_dout, 
      DOUT => ua_preg119_dout
    );

  UA_PREG120 : rtg_register_w5
    port map (
      CLK => CLK, 
      RST => Reset, 
      ENB => ua_preg120_enb, 
      DIN => ua_mux106_dout, 
      DOUT => ua_preg120_dout
    );

  bitrange28to24_00 <= uf_ireg_data_out(28 downto 24);
  bitrange15to0_00 <= uf_ireg_data_out(15 downto 0);
  bitrange31to24_00 <= uf_dmem_data_in(31 downto 24);
  bitrange23to16_00 <= uf_dmem_data_in(23 downto 16);
  bitrange15to8_00 <= uf_dmem_data_in(15 downto 8);
  bitrange7to0_00 <= uf_dmem_data_in(7 downto 0);
  concat_00 <= bitrange7to0_00 & bitrange15to8_00 & bitrange23to16_00 &
  	bitrange31to24_00;
  bitrange20to16_00 <= uf_ireg_data_out(20 downto 16);
  bitrange4to1_00 <= ua_preg19_dout(4 downto 1);
  const_b1 <= '1';
  const_32h00000004 <= "00000000000000000000000000000100";
  const_b0 <= '0';
  bitrange31to24_01 <= uf_dmem_data_in(31 downto 24);
  bitrange23to16_01 <= uf_dmem_data_in(23 downto 16);
  bitrange15to8_01 <= uf_dmem_data_in(15 downto 8);
  bitrange7to0_01 <= uf_dmem_data_in(7 downto 0);
  concat_01 <= bitrange7to0_01 & bitrange15to8_01 & bitrange23to16_01 &
  	bitrange31to24_01;
  concat_02 <= bitrange4to1_00 & const_b1;
  bitrange31to2_00 <= ua_preg00_dout(31 downto 2);
  const_bv00 <= "00";
  concat_03 <= bitrange31to2_00 & const_bv00;
  bitrange1to0_00 <= ua_preg00_dout(1 downto 0);
  bitrange23to16_02 <= concat_00(23 downto 16);
  bitrange15to8_02 <= concat_00(15 downto 8);
  bitrange7to0_02 <= concat_00(7 downto 0);
  bitrange23to16_03 <= ua_preg07_dout(23 downto 16);
  bitrange15to8_03 <= ua_preg07_dout(15 downto 8);
  bitrange7to0_03 <= ua_preg07_dout(7 downto 0);
  concat_04 <= bitrange23to16_02 & bitrange15to8_02 & bitrange7to0_02 &
  	bitrange7to0_03;
  concat_05 <= bitrange15to8_02 & bitrange7to0_02 & bitrange15to8_03 &
  	bitrange7to0_03;
  concat_06 <= bitrange7to0_02 & bitrange23to16_03 & bitrange15to8_03 &
  	bitrange7to0_03;
  bitrange31to24_02 <= concat_00(31 downto 24);
  bitrange31to24_03 <= ua_preg07_dout(31 downto 24);
  concat_07 <= bitrange31to24_03 & bitrange23to16_03 & bitrange15to8_03
  	& bitrange31to24_02;
  concat_08 <= bitrange31to24_03 & bitrange23to16_03 & bitrange31to24_02
  	& bitrange23to16_02;
  concat_09 <= bitrange31to24_03 & bitrange31to24_02 & bitrange23to16_02
  	& bitrange15to8_02;
  bitrange7to0_04 <= ua_preg08_dout(7 downto 0);
  bitrange15to8_04 <= ua_preg08_dout(15 downto 8);
  bitrange23to16_04 <= ua_preg08_dout(23 downto 16);
  bitrange31to24_04 <= ua_preg08_dout(31 downto 24);
  concat_10 <= bitrange7to0_04 & bitrange15to8_04 & bitrange23to16_04 &
  	bitrange31to24_04;
  bitrange4to1_01 <= bitrange20to16_00(4 downto 1);
  concat_11 <= bitrange4to1_01 & const_b1;
  bitrange7to0_05 <= ua_preg13_dout(7 downto 0);
  bitrange15to8_05 <= ua_preg13_dout(15 downto 8);
  bitrange23to16_05 <= ua_preg13_dout(23 downto 16);
  bitrange31to24_05 <= ua_preg13_dout(31 downto 24);
  concat_12 <= bitrange7to0_05 & bitrange15to8_05 & bitrange23to16_05 &
  	bitrange31to24_05;
  const_5h00 <= "00000";
  concat_13 <= bitrange31to24_02 & bitrange31to24_03 & bitrange23to16_03
  	& bitrange15to8_03;
  concat_14 <= bitrange31to24_02 & bitrange23to16_02 & bitrange31to24_03
  	& bitrange23to16_03;
  concat_15 <= bitrange31to24_02 & bitrange23to16_02 & bitrange15to8_02
  	& bitrange31to24_03;
  bitrange31to2_01 <= ua_preg01_dout(31 downto 2);
  concat_16 <= bitrange31to2_01 & const_bv00;
  bitrange7to0_06 <= ua_preg18_dout(7 downto 0);
  bitrange15to8_06 <= ua_preg18_dout(15 downto 8);
  bitrange23to16_06 <= ua_preg18_dout(23 downto 16);
  bitrange31to24_06 <= ua_preg18_dout(31 downto 24);
  concat_17 <= bitrange7to0_06 & bitrange15to8_06 & bitrange23to16_06 &
  	bitrange31to24_06;
  concat_18 <= bitrange7to0_03 & bitrange23to16_02 & bitrange15to8_02 &
  	bitrange7to0_02;
  concat_19 <= bitrange15to8_03 & bitrange7to0_03 & bitrange15to8_02 &
  	bitrange7to0_02;
  concat_20 <= bitrange23to16_03 & bitrange15to8_03 & bitrange7to0_03 &
  	bitrange7to0_02;
  bitrange12to8_00 <= uf_ireg_data_out(12 downto 8);
  bitrange7to0_07 <= uf_ireg_data_out(7 downto 0);
  bitrange7to0_08 <= ua_preg17_dout(7 downto 0);
  bitrange15to8_07 <= ua_preg17_dout(15 downto 8);
  bitrange23to16_07 <= ua_preg17_dout(23 downto 16);
  bitrange31to24_07 <= ua_preg17_dout(31 downto 24);
  concat_21 <= bitrange7to0_08 & bitrange15to8_07 & bitrange23to16_07 &
  	bitrange31to24_07;
  bitrange31to28_00 <= uf_cpc_data_out(31 downto 28);
  bitrange25to0_00 <= uf_ireg_data_out(25 downto 0);
  concat_22 <= bitrange31to28_00 & bitrange25to0_00 & const_bv00;
  const_5h1f <= "11111";
  bitrange29to0_00 <= uf_ext1_data_out(29 downto 0);
  concat_23 <= bitrange29to0_00 & const_bv00;
  bitpos2_00 <= uf_alu1_flag(2);
  cmpeq_00 <= 
	'1' when bitpos2_00 = '1' else 
	'0';
  cmpneq_00 <= 
	'1' when bitpos2_00 /= '1' else 
	'0';
  bitpos1_00 <= uf_alu1_flag(1);
  bitor_00 <= bitpos1_00 or bitpos2_00;
  cmpeq_01 <= 
	'1' when bitor_00 = '1' else 
	'0';
  cmpneq_01 <= 
	'1' when bitor_00 /= '1' else 
	'0';
  cmpeq_02 <= 
	'1' when bitpos1_00 = '1' else 
	'0';
  cmpneq_02 <= 
	'1' when bitpos1_00 /= '1' else 
	'0';
  bitrange63to32_00 <= uf_mul1_result(63 downto 32);
  bitrange31to0_00 <= uf_mul1_result(31 downto 0);
  const_24h000000 <= "000000000000000000000000";
  concat_24 <= const_24h000000 & bitrange7to0_07;
  bitrange4to0_00 <= ua_preg25_dout(4 downto 0);
  bitrange4to0_01 <= ua_preg05_dout(4 downto 0);
  bitrange1to0_01 <= uf_alu1_flag(1 downto 0);
  cmpeq_03 <= 
	'1' when bitrange1to0_01 = "10" else 
	'0';
  cmpeq_04 <= 
	'1' when uf_alu1_flag = "1001" else 
	'0';
  bitor_01 <= cmpeq_03 or cmpeq_04;
  const_31h00000000 <= "0000000000000000000000000000000";
  concat_25 <= const_31h00000000 & bitor_01;
  bitrange3to2_00 <= uf_alu1_flag(3 downto 2);
  cmpeq_05 <= 
	'1' when bitrange3to2_00 = "00" else 
	'0';
  concat_26 <= const_31h00000000 & cmpeq_05;
  const_16h0000 <= "0000000000000000";
  concat_27 <= bitrange15to0_00 & const_16h0000;
  const_32h00000060 <= "00000000000000000000000001100000";
  const_32h00000030 <= "00000000000000000000000000110000";
  uf_div1_reset <= '0';
  uf_div1_clear <= '0';
  uf_div1_start <= '0';
  uf_mul1_reset <= '0';
  uf_mul1_start <= '0';
  uf_mul1_clear <= '0';
  uf_hi_reset <= '0';
  uf_lo_reset <= '0';
  uf_sysreg_reset <= '0';
  uf_fwu0_fw1 <= '0';
  uf_fwu0_fw2 <= '0';
  uf_fwu0_fw3 <= '0';
  uf_fwu0_fw4 <= '0';
  uf_fwu0_fw5 <= '0';
  uf_fwu0_fw6 <= '0';
  uf_fwu0_fw7 <= '0';
  uf_fwu0_fw8 <= '0';
  uf_fwu1_fw1 <= '0';
  uf_fwu1_fw2 <= '0';
  uf_fwu1_fw3 <= '0';
  uf_fwu1_fw4 <= '0';
  uf_fwu1_fw5 <= '0';
  uf_fwu1_fw6 <= '0';
  uf_fwu1_fw7 <= '0';
  uf_fwu1_fw8 <= '0';
  uf_fwu2_fw1 <= '0';
  uf_fwu2_fw2 <= '0';
  uf_fwu2_fw3 <= '0';
  uf_fwu2_fw4 <= '0';
  uf_fwu2_fw5 <= '0';
  uf_fwu2_fw6 <= '0';
  uf_fwu2_fw7 <= '0';
  uf_fwu2_fw8 <= '0';
  uf_fwu3_fw1 <= '0';
  uf_fwu3_fw2 <= '0';
  uf_fwu3_fw3 <= '0';
  uf_fwu3_fw4 <= '0';
  uf_fwu3_fw5 <= '0';
  uf_fwu3_fw6 <= '0';
  uf_fwu3_fw7 <= '0';
  uf_fwu3_fw8 <= '0';
  uf_fwu4_fw1 <= '0';
  uf_fwu4_fw2 <= '0';
  uf_fwu4_fw3 <= '0';
  uf_fwu4_fw4 <= '0';
  uf_fwu4_fw5 <= '0';
  uf_fwu4_fw6 <= '0';
  uf_fwu4_fw7 <= '0';
  uf_fwu4_fw8 <= '0';
  uf_fwul0_fw2 <= '0';
  uf_fwul0_fw4 <= '0';
  uf_fwul0_lock6 <= '0';
  uf_fwul1_fw2 <= '0';
  uf_fwul1_fw4 <= '0';
  uf_fwul1_lock6 <= '0';
  uf_fwul2_fw2 <= '0';
  uf_fwul2_fw4 <= '0';
  uf_fwul2_lock6 <= '0';
  uf_fwul3_fw2 <= '0';
  uf_fwul3_fw4 <= '0';
  uf_fwul3_lock6 <= '0';
end RTL;

-----------------------------------------
-- Generated by ASIP Meister ver.2.3.2 --
-----------------------------------------
