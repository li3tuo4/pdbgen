// Copyright (C) 2008 ASIP Solutions, Inc. All rights reserved. 
// Generated by ASIP Meister 2.3 on 2016/06/14 17:07:14 
structure
{
  ALU1
  {
    class {alu}
    stage {3}
    connection {
      result {
        stage 4 Dmem.addr_out
        stage 4 ADDER2.a
        stage 5 Dmem.addr_out
        stage 3 ADDER2.a
        stage 3 FWUL0.data1
        stage 3 FWUL1.data1
        stage 3 FWUL2.data1
        stage 3 FWUL3.data1
        stage 4 FWUL0.data3
        stage 4 FWUL1.data3
        stage 4 FWUL2.data3
        stage 4 FWUL3.data3
        stage 5 FWUL0.data5
        stage 5 FWUL1.data5
        stage 5 FWUL2.data5
        stage 5 FWUL3.data5
        stage 6 GPR.data_in0
        stage 6 FWUL0.data7
        stage 6 FWUL1.data7
        stage 6 FWUL2.data7
        stage 6 FWUL3.data7
        stage 4 Dmem.addr_out
        stage 4 MUXw32p4.sel
        stage 5 Dmem.addr_out
      }
      flag__ {
        stage 3 FWUL0.data1
        stage 3 FWUL0.data1
        stage 3 FWUL0.data1
      }
    }
  }
  ADD1
  {
    class {adder}
    stage {2}
    connection {
      result {
        stage 3 CPC.data_in
      }
    }
  }
  DIV1
  {
    class {divider}
    stage {3}
    connection {
      q {
        stage 3 LO.data_in
      }
      r {
        stage 3 HI.data_in
      }
    }
  }
  EXT1
  {
    class {extender}
    stage {2}
    connection {
      data_out {
        stage 3 ALU1.b
        stage 2 ADD1.b
      }
    }
  }
  MUL1
  {
    class {multiplier}
    stage {3}
    connection {
      result {
        stage 3 HI.data_in
        stage 3 LO.data_in
      }
    }
  }
  portion
  HI
  {
    class {register}
    stage {2}
    connection {
      data_out {
        stage 3 FWUL0.data1
        stage 3 FWUL1.data1
        stage 3 FWUL2.data1
        stage 3 FWUL3.data1
        stage 4 FWUL0.data3
        stage 4 FWUL1.data3
        stage 4 FWUL2.data3
        stage 4 FWUL3.data3
        stage 5 FWUL0.data5
        stage 5 FWUL1.data5
        stage 5 FWUL2.data5
        stage 5 FWUL3.data5
        stage 6 GPR.data_in0
        stage 6 FWUL0.data7
        stage 6 FWUL1.data7
        stage 6 FWUL2.data7
        stage 6 FWUL3.data7
      }
    }
  }
  portion
  HI
  {
    class {register}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  LO
  {
    class {register}
    stage {2}
    connection {
      data_out {
        stage 3 FWUL0.data1
        stage 3 FWUL1.data1
        stage 3 FWUL2.data1
        stage 3 FWUL3.data1
        stage 4 FWUL0.data3
        stage 4 FWUL1.data3
        stage 4 FWUL2.data3
        stage 4 FWUL3.data3
        stage 5 FWUL0.data5
        stage 5 FWUL1.data5
        stage 5 FWUL2.data5
        stage 5 FWUL3.data5
        stage 6 GPR.data_in0
        stage 6 FWUL0.data7
        stage 6 FWUL1.data7
        stage 6 FWUL2.data7
        stage 6 FWUL3.data7
      }
    }
  }
  portion
  LO
  {
    class {register}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  GPR
  {
    class {registerfile}
    stage {2}
    connection {
      data_out0 {
        stage 2 FWUL0.data0
        stage 2 FWU0.data0
      }
      data_out1 {
        stage 2 FWUL1.data0
      }
      data_out2 {
        stage 2 FWUL2.data0
      }
      data_out3 {
        stage 2 FWUL3.data0
      }
    }
  }
  portion
  GPR
  {
    class {registerfile}
    stage {6}
    connection {
      dummy{}
    }
  }
  portion
  IReg
  {
    class {register}
    stage {2}
    connection {
      data_out {
        stage 2 GPR.r_sel0
        stage 2 EXT1.data_in
        stage 3 FWUL0.locknum1
        stage 2 GPR.r_sel1
        stage 3 SFT1.ctrl
        stage 3 CPC.data_in
      }
    }
  }
  portion
  IReg
  {
    class {register}
    stage {1}
    connection {
      dummy{}
    }
  }
  portion
  Dmem
  {
    class {mifu}
    stage {4}
    connection {
      data_in {
        stage 4 FWUL0.data3
        stage 4 FWUL0.data3
        stage 4 FWUL0.data3
        stage 4 FWUL0.data3
      }
    }
  }
  portion
  Dmem
  {
    class {mifu}
    stage {5}
    connection {
      data_in {
        stage 5 FWUL0.data6
        stage 5 FWUL0.data6
        stage 5 FWUL0.data6
        stage 5 FWUL0.data6
      }
    }
  }
  portion
  Dmem
  {
    class {mifu}
    stage {6}
    connection {
      dummy{}
    }
  }
  portion
  CPC
  {
    class {pcu}
    stage {1}
    connection {
      data_out {
        stage 1 Imem.addr_out
      }
    }
  }
  portion
  CPC
  {
    class {pcu}
    stage {2}
    connection {
      data_out {
        stage 3 FWUL0.data1
        stage 3 FWUL1.data1
        stage 3 FWUL2.data1
        stage 3 FWUL3.data1
        stage 4 FWUL0.data3
        stage 4 FWUL1.data3
        stage 4 FWUL2.data3
        stage 4 FWUL3.data3
        stage 5 FWUL0.data5
        stage 5 FWUL1.data5
        stage 5 FWUL2.data5
        stage 5 FWUL3.data5
        stage 6 GPR.data_in0
        stage 6 FWUL0.data7
        stage 6 FWUL1.data7
        stage 6 FWUL2.data7
        stage 6 FWUL3.data7
        stage 2 ADD1.a
        stage 3 SYSREG.data_in
        stage 3 CPC.data_in
      }
    }
  }
  portion
  CPC
  {
    class {pcu}
    stage {3}
    connection {
      dummy{}
    }
  }
  SFT1
  {
    class {shifter}
    stage {3}
    connection {
      data_out {
        stage 3 FWUL0.data1
        stage 3 FWUL1.data1
        stage 3 FWUL2.data1
        stage 3 FWUL3.data1
        stage 4 FWUL0.data3
        stage 4 FWUL1.data3
        stage 4 FWUL2.data3
        stage 4 FWUL3.data3
        stage 5 FWUL0.data5
        stage 5 FWUL1.data5
        stage 5 FWUL2.data5
        stage 5 FWUL3.data5
        stage 6 GPR.data_in0
        stage 6 FWUL0.data7
        stage 6 FWUL1.data7
        stage 6 FWUL2.data7
        stage 6 FWUL3.data7
      }
    }
  }
  portion
  SYSREG
  {
    class {register}
    stage {2}
    connection {
      data_out {
        stage 3 CPC.data_in
      }
    }
  }
  portion
  SYSREG
  {
    class {register}
    stage {3}
    connection {
      dummy{}
    }
  }
  FWU0
  {
    class {fwu}
    stage {2}
    connection {
      data_out {
        stage 3 ALU1.a
      }
    }
  }
  portion
  ADDER2
  {
    class {adder}
    stage {4}
    connection {
      result {
        stage 5 Dmem.addr_out
        stage 6 Dmem.addr_out
      }
    }
  }
  portion
  ADDER2
  {
    class {adder}
    stage {3}
    connection {
      result {
        stage 6 Dmem.addr_out
      }
    }
  }
  Imem
  {
    class {mifu}
    stage {1}
    connection {
      data_in {
        stage 1 IReg.data_in
      }
    }
  }
  portion
  FWUL0
  {
    class {fwu_lock}
    stage {2}
    connection {
      data_out {
        stage 3 ALU1.a
        stage 3 CPC.data_in
        stage 3 MUL1.a
        stage 3 DIV1.a
        stage 3 HI.data_in
        stage 3 LO.data_in
        stage 3 SFT1.data_in
        stage 3 SFT1.ctrl
      }
    }
  }
  portion
  FWUL0
  {
    class {fwu_lock}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  FWUL1
  {
    class {fwu_lock}
    stage {2}
    connection {
      data_out {
        stage 5 Dmem.data_out
        stage 6 Dmem.data_out
        stage 4 MUXw32p4.data_in3
        stage 4 MUXw32p4.data_in0
        stage 3 ALU1.b
        stage 3 MUL1.b
        stage 3 DIV1.b
        stage 3 SFT1.data_in
        stage 4 MUXw32p4.data_in0
        stage 4 MUXw32p4.data_in1
        stage 4 MUXw32p4.data_in2
        stage 4 MUXw32p4.data_in3
        stage 5 Dmem.data_out
        stage 5 Dmem.data_out
        stage 5 Dmem.data_out
        stage 5 Dmem.data_out
      }
    }
  }
  portion
  FWUL1
  {
    class {fwu_lock}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  FWUL2
  {
    class {fwu_lock}
    stage {2}
    connection {
      data_out {
        stage 3 ALU1.b
        stage 6 Dmem.data_out
        stage 6 Dmem.data_out
        stage 6 Dmem.data_out
        stage 6 Dmem.data_out
      }
    }
  }
  portion
  FWUL2
  {
    class {fwu_lock}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  FWUL3
  {
    class {fwu_lock}
    stage {2}
    connection {
      data_out {
        stage 6 Dmem.data_out
        stage 6 Dmem.data_out
        stage 6 Dmem.data_out
        stage 6 Dmem.data_out
      }
    }
  }
  portion
  FWUL3
  {
    class {fwu_lock}
    stage {3}
    connection {
      dummy{}
    }
  }
  MUXw32p4
  {
    class {multiplexor}
    stage {4}
    connection {
      data_out {
        stage 4 FWUL0.data3
        stage 4 FWUL1.data3
        stage 4 FWUL2.data3
        stage 4 FWUL3.data3
        stage 5 FWUL0.data5
        stage 5 FWUL1.data5
        stage 5 FWUL2.data5
        stage 5 FWUL3.data5
        stage 6 GPR.data_in0
        stage 6 FWUL0.data7
        stage 6 FWUL1.data7
        stage 6 FWUL2.data7
        stage 6 FWUL3.data7
        stage 5 Dmem.data_out
        stage 5 Dmem.data_out
        stage 5 Dmem.data_out
        stage 5 Dmem.data_out
      }
    }
  }
}
